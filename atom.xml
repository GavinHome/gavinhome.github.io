<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gavinhome Blog</title>
  
  <subtitle>GavinHome Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gavinhome.github.io/"/>
  <updated>2019-04-01T13:04:32.589Z</updated>
  <id>http://gavinhome.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自动压缩并拷贝数据库备份至备份机器</title>
    <link href="http://gavinhome.github.io/2019/03/31/%E8%87%AA%E5%8A%A8%E5%8E%8B%E7%BC%A9%E5%B9%B6%E6%8B%B7%E8%B4%9D%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E8%87%B3%E5%A4%87%E4%BB%BD%E6%9C%BA%E5%99%A8/"/>
    <id>http://gavinhome.github.io/2019/03/31/自动压缩并拷贝数据库备份至备份机器/</id>
    <published>2019-03-30T16:00:00.000Z</published>
    <updated>2019-04-01T13:04:32.589Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录在局域网机器上拷贝数据库备份等文件，实现双机备份重要文件，使得数据安全又上一个台阶，同时自动对大文件进行压缩，节省时间和空间。本例依赖7z工具进行文件压缩，目录“D:\Auto_Copy_Backup_Temp”为自动压缩文件存储目录，大体思路是：</p><ol><li>使用“del”命令删除临时目录的所有压缩后的文件；</li><li>获取当前系统时间作为压缩文件文件名；</li><li>找到所有备份文件并用7z工具压缩；</li><li>拷贝压缩文件到目标目录；</li><li>将本脚本添加到系统任务计划程序中，在数据库备份计划后执行。</li></ol><p>共享目录：”destinition=\ip\TZIWB_DB_Backup\”需要提前在另外一台机子上（备份机器）创建，并在本机上映射为共享目录。</p><p>脚本代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rem auther:yangxiaomin</span><br><span class="line">rem date:20190319</span><br><span class="line">rem ******auto copy start********</span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">rem 删除临时目录下的所有压缩文件</span><br><span class="line">del /f /s /q &quot;D:\Auto_Copy_Backup_Temp\*.*&quot;</span><br><span class="line"></span><br><span class="line">rem 获取当前系统时间，形如：&quot;2019-03-19-16-10-23&quot;</span><br><span class="line">set &quot;Ymd=%date:~0,4%-%date:~5,2%-%date:~8,2%-%time:~0,2%-%time:~3,2%-%time:~6,2%&quot;</span><br><span class="line"></span><br><span class="line">rem 删除系统时间中的空格，形如：&quot;2019-03-19-0-00-00&quot;</span><br><span class="line">set &quot;today=%Ymd: =%&quot;</span><br><span class="line"></span><br><span class="line">rem 压缩命令目录，本例使用7z工具压缩</span><br><span class="line">set &quot;Zip=D:\Program Files\7-Zip\7z.exe&quot;</span><br><span class="line"></span><br><span class="line">rem 拷贝到局域网的其他机器ip及共享文件夹</span><br><span class="line">set &quot;destinition=\\ip\TZIWB_DB_Backup\&quot;</span><br><span class="line"></span><br><span class="line">rem 如果需要在共享目录下按照子目录的方式存储，则使用以下命令自动创建子目录，例如按照日期创建子目录</span><br><span class="line">rem &quot;destinition=\\ip\TZIWB_DB_Backup\%today%&quot;</span><br><span class="line">rem if not exist %destinition% (</span><br><span class="line">rem md %destinition%</span><br><span class="line">rem )</span><br><span class="line"></span><br><span class="line">rem 找到业务数据库的最新备份</span><br><span class="line">SET &quot;DatabaseBackupPath_Product=D:\SQLSVRDATA\Backup\TZIWB_Product&quot;</span><br><span class="line">FOR /F &quot;delims=|&quot; %%I IN (&apos;DIR &quot;%DatabaseBackupPath_Product%\*.bak&quot; /B /O:D&apos;) DO SET NewestProductFile=%%I</span><br><span class="line"></span><br><span class="line">rem 找到job数据库的最新备份</span><br><span class="line">SET &quot;DatabaseBackupPath_ProductJobs=D:\SQLSVRDATA\Backup\TZIWB_Product_Jobs&quot;</span><br><span class="line">FOR /F &quot;delims=|&quot; %%I IN (&apos;DIR &quot;%DatabaseBackupPath_ProductJobs%\*.bak&quot; /B /O:D&apos;) DO SET NewestProductJobsFile=%%I</span><br><span class="line"></span><br><span class="line">rem 找到普元工作流数据库的最新备份</span><br><span class="line">SET &quot;DatabaseBackupPath_PrimetonBps=D:\MySQLDATA\Backup\primeton_bps_product&quot;</span><br><span class="line">FOR /F &quot;delims=|&quot; %%I IN (&apos;DIR &quot;%DatabaseBackupPath_PrimetonBps%\*.sql&quot; /B /O:D&apos;) DO SET NewestPrimetonBpsFile=%%I</span><br><span class="line"></span><br><span class="line">rem 找到工作流审核数据库的最新备份</span><br><span class="line">SET &quot;DatabaseBackupPath_TzwfBps=D:\MySQLDATA\Backup\tzwf_bps_product&quot;</span><br><span class="line">FOR /F &quot;delims=|&quot; %%I IN (&apos;DIR &quot;%DatabaseBackupPath_TzwfBps%\*.sql&quot; /B /O:D&apos;) DO SET NewestTzwfFile=%%I</span><br><span class="line"></span><br><span class="line">rem 使用7z工具压缩以上四个数据库备份文件</span><br><span class="line">&quot;%Zip%&quot; a &quot;D:\Auto_Copy_Backup_Temp\%today%.zip&quot; &quot;%DatabaseBackupPath_Product%\%NewestProductFile%&quot; &quot;%DatabaseBackupPath_ProductJobs%\%NewestProductJobsFile%&quot; &quot;%DatabaseBackupPath_PrimetonBps%\%NewestPrimetonBpsFile%&quot; &quot;%DatabaseBackupPath_TzwfBps%\%NewestTzwfFile%&quot;</span><br><span class="line"></span><br><span class="line">rem 拷贝上一步压缩的文件到目标目录</span><br><span class="line">copy &quot;D:\Auto_Copy_Backup_Temp\%today%.zip&quot; &quot;%destinition%&quot;</span><br><span class="line"></span><br><span class="line">@echo on</span><br><span class="line">rem ******auto copy end********</span><br></pre></td></tr></table></figure><p>至此，备份机存储了所有压缩后的文件，若原始机器空间不足，可放心删除备份文件。基于此，可进行以下两处扩展：</p><ol><li>可在脚本头部集成自动备份数据库的脚本；</li><li>可在目标目录添加监控程序，如果备份不存在则短信提示。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文记录在局域网机器上拷贝数据库备份等文件，实现双机备份重要文件，使得数据安全又上一个台阶，同时自动对大文件进行压缩，节省时间和空间。本例依赖7z工具进行文件压缩，目录“D:\Auto_Copy_Backup_Temp”为自动压缩文件存储目录，大体思路是：&lt;/p&gt;
&lt;ol&gt;
      
    
    </summary>
    
      <category term="脚本" scheme="http://gavinhome.github.io/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="脚本" scheme="http://gavinhome.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>搭建Hexo静态资源博客</title>
    <link href="http://gavinhome.github.io/2019/03/29/%E6%90%AD%E5%BB%BAHexo%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8D%9A%E5%AE%A2/"/>
    <id>http://gavinhome.github.io/2019/03/29/搭建Hexo静态资源博客/</id>
    <published>2019-03-28T16:00:00.000Z</published>
    <updated>2019-04-01T13:04:32.585Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Hexo" scheme="http://gavinhome.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://gavinhome.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>统计SqlServer数据库表规模</title>
    <link href="http://gavinhome.github.io/2019/02/28/%E7%BB%9F%E8%AE%A1SqlServer%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E8%A7%84%E6%A8%A1/"/>
    <id>http://gavinhome.github.io/2019/02/28/统计SqlServer数据库表规模/</id>
    <published>2019-02-27T16:00:00.000Z</published>
    <updated>2019-04-01T13:04:32.588Z</updated>
    
    <content type="html"><![CDATA[<p>统计数据库中所有表的数据规模：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>* <span class="keyword">from</span> (<span class="keyword">select</span> schema_name(t.schema_id) <span class="keyword">as</span> [<span class="keyword">Schema</span>], t.name <span class="keyword">as</span> TableName,i.rows <span class="keyword">as</span> [RowCount] </span><br><span class="line"><span class="keyword">from</span> sys.tables <span class="keyword">as</span> t, sysindexes <span class="keyword">as</span> i </span><br><span class="line"><span class="keyword">where</span> t.object_id = i.id <span class="keyword">and</span> i.indid &lt;=<span class="number">1</span>) a</span><br><span class="line"></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.[RowCount] <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;统计数据库中所有表的数据规模：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
      <category term="SqlServer" scheme="http://gavinhome.github.io/categories/SqlServer/"/>
    
    
      <category term="SqlServer" scheme="http://gavinhome.github.io/tags/SqlServer/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib可视化数据</title>
    <link href="http://gavinhome.github.io/2019/01/25/matplotlib%E5%8F%AF%E8%A7%86%E5%8C%96%E6%95%B0%E6%8D%AE/"/>
    <id>http://gavinhome.github.io/2019/01/25/matplotlib可视化数据/</id>
    <published>2019-01-25T07:57:06.000Z</published>
    <updated>2019-04-01T13:04:32.583Z</updated>
    
    <content type="html"><![CDATA[<p> matplotlib对于数据可视化非常重要，它完全封装了MatLab的所有API，在python的环境下和Python的语法一起使用更是相得益彰。</p><h2 id="库的安装和环境的配置"><a href="#库的安装和环境的配置" class="headerlink" title="库的安装和环境的配置"></a>库的安装和环境的配置</h2><p>windows下：py -3 -m pip install matplotlib</p><p>linux下：python3 -m pip install matplotlib</p><p>建议配合Jupyter使用。在jupyter notebook中，使用%matplotlib inline，即可进入交互页面</p><h2 id="设置中文环境"><a href="#设置中文环境" class="headerlink" title="设置中文环境"></a>设置中文环境</h2><p>首先引入包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment">#之后需要用到</span></span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl <span class="comment">#设置环境变量</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#绘图专用</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D <span class="comment">#绘制3D图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#为了让图片兼容中文的说明、名字等，这里需要：</span></span><br><span class="line"></span><br><span class="line">mpl.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'SimHei'</span>]</span><br><span class="line">mpl.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编码</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br></pre></td></tr></table></figure><h2 id="一窥全貌"><a href="#一窥全貌" class="headerlink" title="一窥全貌"></a>一窥全貌</h2><p>首先，我们画一张正弦和余弦图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(<span class="string">'sin/cos'</span>, dpi=<span class="number">70</span>)</span><br><span class="line"><span class="comment"># 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）</span></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">X = np.linspace(-np.pi, np.pi, <span class="number">256</span>,endpoint=<span class="literal">True</span>)</span><br><span class="line">C,S = np.cos(X), np.sin(X)</span><br><span class="line"><span class="comment"># 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条</span></span><br><span class="line">plt.plot(X, C, color=<span class="string">"blue"</span>, linewidth=<span class="number">1.0</span>, linestyle=<span class="string">"-"</span>)</span><br><span class="line"><span class="comment"># 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条</span></span><br><span class="line">plt.plot(X, S, color=<span class="string">"green"</span>, linewidth=<span class="number">1.0</span>, linestyle=<span class="string">"-"</span>)</span><br><span class="line"><span class="comment"># 设置横轴的上下限</span></span><br><span class="line">plt.xlim(<span class="number">-4.0</span>,<span class="number">4.0</span>)</span><br><span class="line"><span class="comment"># 设置横轴记号</span></span><br><span class="line">plt.xticks(np.linspace(<span class="number">-4</span>,<span class="number">4</span>,<span class="number">9</span>,endpoint=<span class="literal">True</span>))</span><br><span class="line"><span class="comment"># 设置纵轴的上下限</span></span><br><span class="line">plt.ylim(<span class="number">-1.0</span>,<span class="number">1.0</span>)</span><br><span class="line"><span class="comment"># 设置纵轴记号</span></span><br><span class="line">plt.yticks(np.linspace(<span class="number">-1</span>,<span class="number">1</span>,<span class="number">5</span>,endpoint=<span class="literal">True</span>))</span><br><span class="line"><span class="comment"># 以分辨率 72 来保存图片</span></span><br><span class="line"><span class="comment"># savefig("exercice_2.png",dpi=72)</span></span><br><span class="line"><span class="comment"># 在屏幕上显示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-12/output_9_0.png" alt="png"></p><ol><li>plt.figure(name,dpi):name是图片的名字，dpi是分辨率</li><li>plt.plot(x,y,color,linewidth,linestyle,label)：用来绘制点线图。color是线条颜色，linewidth是宽度，linestyle可以设置成’–’(两个短杠)，就变成了虚线。label参数和图例有关</li><li>plt.xlim(min,max)/plt.ylim(min,max)：设置x/y轴的范围。</li><li>plt.xtricks(列表)/plt.ytricks(列表)：设置x轴/y轴的上显示的值。如果想要设置记号标签，可以传入两个对应的列表。</li><li>plt.legend(loc=随机默认)：添加图例，图例来自于plt.plot()参数里的label，如果想让label按照公式显示，需要在字符串前后加美元符号。<br>即：label=’$sin(x)$’。oc参数定义图标位置，可以是upper left/right类似的方向。</li><li>plt.xlabel(labelname)/ylabel(labelname)：添加x/y轴的名字并且显示出来。</li><li>plt.scatter(xlist,ylist):根据需要标注图中的特殊点。</li><li>plt.title()：给图一个名称。</li><li>移动坐标轴：（之前的图片还是不好看）实际上每幅图有四条脊柱（上下左右），为了将脊柱放在图的中间，我们必须将其中的两条（上和右）设置为无色，然后调整剩下的两条到合适的位置——数据空间的 0 点。<br>  ax = plt.gca()<br>  ax.spines[‘right’].set_color(‘none’)<br>  ax.spines[‘top’].set_color(‘red’)<br>  ax.xaxis.set_ticks_position(‘bottom’)<br>  ax.spines[‘bottom’].set_position((‘data’,0))<br>  ax.yaxis.set_ticks_position(‘left’)<br>  ax.spines[‘left’].set_position((‘data’,0)) </li></ol><p>改进后的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">6</span>), dpi=<span class="number">70</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）</span></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">X = np.linspace(-np.pi, np.pi, <span class="number">256</span>,endpoint=<span class="literal">True</span>)</span><br><span class="line">C,S = np.cos(X), np.sin(X)</span><br><span class="line"></span><br><span class="line">plt.plot(X, C, color=<span class="string">"blue"</span>, linewidth=<span class="number">1.5</span>, linestyle=<span class="string">"--"</span>,label=<span class="string">"$y=cos(x)$"</span>)</span><br><span class="line">plt.plot(X, S, color=<span class="string">"red"</span>, linewidth=<span class="number">1.0</span>, linestyle=<span class="string">"-"</span>,label=<span class="string">'$y=sin(x)$'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'Y'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'X'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlim(X.min()*<span class="number">1.1</span>,X.max()*<span class="number">1.1</span>)</span><br><span class="line">plt.xticks([-np.pi, -np.pi/<span class="number">2</span>, <span class="number">0</span>, np.pi/<span class="number">2</span>, np.pi],\</span><br><span class="line">       [<span class="string">r'$-\pi$'</span>, <span class="string">r'$-\pi/2$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+\pi/2$'</span>, <span class="string">r'$+\pi$'</span>])</span><br><span class="line">plt.ylim(C.min()*<span class="number">1.1</span>,C.max()*<span class="number">1.1</span>)</span><br><span class="line">plt.yticks([<span class="number">-1</span>, <span class="number">0</span>, +<span class="number">1</span>],\</span><br><span class="line">       [<span class="string">r'$-1$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+1$'</span>])</span><br><span class="line"></span><br><span class="line">ax = plt.gca()</span><br><span class="line">ax.spines[<span class="string">'right'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">ax.spines[<span class="string">'top'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">ax.xaxis.set_ticks_position(<span class="string">'bottom'</span>)</span><br><span class="line">ax.spines[<span class="string">'bottom'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line">ax.yaxis.set_ticks_position(<span class="string">'left'</span>)</span><br><span class="line">ax.spines[<span class="string">'left'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 以分辨率 72 来保存图片</span></span><br><span class="line"><span class="comment"># savefig("exercice_2.png",dpi=72)</span></span><br><span class="line"></span><br><span class="line">t = <span class="number">2</span>*np.pi/<span class="number">3</span></span><br><span class="line">plt.scatter([t,],[np.cos(t),], <span class="number">20</span>, color =<span class="string">'black'</span>)</span><br><span class="line">plt.scatter([t,],[np.sin(t),], <span class="number">20</span>, color =<span class="string">'black'</span>)</span><br><span class="line"></span><br><span class="line">plt.legend(loc=<span class="string">"upper left"</span>)</span><br><span class="line">plt.title(<span class="string">'sin/cos'</span>)</span><br><span class="line"><span class="comment"># 在屏幕上显示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-12/output_12_0.png" alt="png"></p><h2 id="精益求精"><a href="#精益求精" class="headerlink" title="精益求精"></a>精益求精</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(<span class="string">'sin/cos'</span>,figsize=(<span class="number">8</span>,<span class="number">6</span>), dpi=<span class="number">70</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）</span></span><br><span class="line"><span class="comment">#plt.subplot(112)</span></span><br><span class="line"></span><br><span class="line">X = np.linspace(-np.pi, np.pi, <span class="number">256</span>,endpoint=<span class="literal">True</span>)</span><br><span class="line">C,S = np.cos(X), np.sin(X)</span><br><span class="line"></span><br><span class="line">plt.plot(X, C, color=<span class="string">"blue"</span>, linewidth=<span class="number">1.5</span>, linestyle=<span class="string">"--"</span>,label=<span class="string">"$y=cos(x)$"</span>)</span><br><span class="line">plt.plot(X, S, color=<span class="string">"red"</span>, linewidth=<span class="number">1.0</span>, linestyle=<span class="string">"-"</span>,label=<span class="string">'$y=sin(x)$'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'Y'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'X'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlim(X.min()*<span class="number">1.1</span>,X.max()*<span class="number">1.1</span>)</span><br><span class="line">plt.xticks([-np.pi, -np.pi/<span class="number">2</span>, <span class="number">0</span>, np.pi/<span class="number">2</span>, np.pi],\</span><br><span class="line">       [<span class="string">r'$-\pi$'</span>, <span class="string">r'$-\pi/2$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+\pi/2$'</span>, <span class="string">r'$+\pi$'</span>])</span><br><span class="line">plt.ylim(C.min()*<span class="number">1.1</span>,C.max()*<span class="number">1.1</span>)</span><br><span class="line">plt.yticks([<span class="number">-1</span>, <span class="number">0</span>, +<span class="number">1</span>],\</span><br><span class="line">       [<span class="string">r'$-1$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+1$'</span>])</span><br><span class="line"></span><br><span class="line">ax = plt.gca()</span><br><span class="line">ax.spines[<span class="string">'right'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">ax.spines[<span class="string">'top'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">ax.xaxis.set_ticks_position(<span class="string">'bottom'</span>)</span><br><span class="line">ax.spines[<span class="string">'bottom'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line">ax.yaxis.set_ticks_position(<span class="string">'left'</span>)</span><br><span class="line">ax.spines[<span class="string">'left'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 以分辨率 72 来保存图片</span></span><br><span class="line"><span class="comment"># savefig("exercice_2.png",dpi=72)</span></span><br><span class="line"></span><br><span class="line">t = <span class="number">2</span>*np.pi/<span class="number">3</span></span><br><span class="line">plt.scatter([t,],[np.cos(t),], <span class="number">20</span>, color =<span class="string">'black'</span>)</span><br><span class="line">plt.scatter([t,],[np.sin(t),], <span class="number">20</span>, color =<span class="string">'black'</span>)</span><br><span class="line"></span><br><span class="line">plt.annotate(<span class="string">r'$\sin(\frac&#123;2\pi&#125;&#123;3&#125;)=\frac&#123;\sqrt&#123;3&#125;&#125;&#123;2&#125;$'</span>,\</span><br><span class="line">         xy=(t, np.sin(t)), xycoords=<span class="string">'data'</span>,\</span><br><span class="line">         xytext=(+<span class="number">10</span>, +<span class="number">30</span>), textcoords=<span class="string">'offset points'</span>, fontsize=<span class="number">16</span>,\</span><br><span class="line">         arrowprops=dict(arrowstyle=<span class="string">"-&gt;"</span>, connectionstyle=<span class="string">"arc3,rad=.2"</span>))</span><br><span class="line"></span><br><span class="line">plt.annotate(<span class="string">r'$\cos(\frac&#123;2\pi&#125;&#123;3&#125;)=-\frac&#123;1&#125;&#123;2&#125;$'</span>,\</span><br><span class="line">         xy=(t, np.cos(t)), xycoords=<span class="string">'data'</span>,\</span><br><span class="line">         xytext=(<span class="number">-90</span>, <span class="number">-50</span>), textcoords=<span class="string">'offset points'</span>, fontsize=<span class="number">16</span>,\</span><br><span class="line">         arrowprops=dict(arrowstyle=<span class="string">"-&gt;"</span>, connectionstyle=<span class="string">"arc3,rad=.2"</span>))</span><br><span class="line"></span><br><span class="line">plt.plot([t,t],[<span class="number">0</span>,np.cos(t)], color =<span class="string">'blue'</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"--"</span>)</span><br><span class="line">plt.plot([t,t],[<span class="number">0</span>,np.sin(t)], color =<span class="string">'red'</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"--"</span>)</span><br><span class="line"></span><br><span class="line">plt.legend(loc=<span class="string">"upper left"</span>)</span><br><span class="line">plt.title(<span class="string">'sin/cos'</span>)</span><br><span class="line"><span class="comment"># 在屏幕上显示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-12/output_14_0.png" alt="png"></p><p>我们添加了标注点，并且向x轴做了垂线，使其更清晰。</p><h2 id="图的存储"><a href="#图的存储" class="headerlink" title="图的存储"></a>图的存储</h2><p>这么漂亮的图，还是通过plt.savefig(照片名字+后缀名)保存到本地吧。</p><h2 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h2><p>plt.subplot(x,y,n):将图片分成x*y块，这个图是第n个。（看示例）</p><ol><li>示例一：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0.1</span>)  </span><br><span class="line">y = np.arange(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0.1</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#plt.figure(1)  </span></span><br><span class="line">plt.subplot(<span class="number">221</span>)  </span><br><span class="line">plt.plot(x, y, <span class="string">'go'</span>)</span><br><span class="line">  </span><br><span class="line">plt.subplot(<span class="number">222</span>)  </span><br><span class="line">plt.plot(x, y, <span class="string">'r--'</span>)  </span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">212</span>)  </span><br><span class="line">plt.plot(x, y,)  </span><br><span class="line">  </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-12/output_19_0.png" alt="png"></p><ol start="2"><li>示例二：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0.1</span>)  </span><br><span class="line">y = np.arange(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0.1</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#plt.figure(1)  </span></span><br><span class="line">plt.subplot(<span class="number">221</span>)  </span><br><span class="line">plt.plot(x, y, <span class="string">'go'</span>)</span><br><span class="line">  </span><br><span class="line">plt.subplot(<span class="number">222</span>)  </span><br><span class="line">plt.plot(x, y, <span class="string">'r--'</span>)  </span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">224</span>)  </span><br><span class="line">plt.plot(x, y,)  </span><br><span class="line">  </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-12/output_21_0.png" alt="png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; matplotlib对于数据可视化非常重要，它完全封装了MatLab的所有API，在python的环境下和Python的语法一起使用更是相得益彰。&lt;/p&gt;
&lt;h2 id=&quot;库的安装和环境的配置&quot;&gt;&lt;a href=&quot;#库的安装和环境的配置&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="Python" scheme="http://gavinhome.github.io/categories/Python/"/>
    
    
      <category term="Matplotlib" scheme="http://gavinhome.github.io/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>SharePoint基于表单身份验证的自定义登录页</title>
    <link href="http://gavinhome.github.io/2018/09/28/SharePoint%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BB%E5%BD%95%E9%A1%B5/"/>
    <id>http://gavinhome.github.io/2018/09/28/SharePoint基于表单身份验证的自定义登录页/</id>
    <published>2018-09-27T16:00:00.000Z</published>
    <updated>2019-04-01T13:04:32.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>许多应用需要基于表单身份的认证，而不是经典模式认证。基于表单的身份验证（FBA）是一种基于声明的身份验证。SharePoint 2016中的FBA默认登录页面非常简单，只提供了用户名、密码和记住ME选项的简单登录控件。但是许多开发人员希望根据业务需求实现一个定制的登录页面以获得更好的体验或更多的选择。本文仅演示如何创建自定义登录页，并部署到Sharepoint服务器场中运行起来。</p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><ol><li>创建Sharepoint项目</li><li>创建自定义登录页</li><li>修改自定义登录页</li><li>修改登录逻辑</li><li>生成并部署自定义登录</li><li>配置应用程序的登录页</li></ol><h2 id="创建Sharepoint项目"><a href="#创建Sharepoint项目" class="headerlink" title="创建Sharepoint项目"></a>创建Sharepoint项目</h2><p>若未安装sharepoint开发环境，请重新安装VS并添加Sharepoint开发包。在VS2017中创建类型为”Empty SharePoint Project”的解决方案，如下图所示：<br><img src="/img/static/2018-09-28/sp007.png" alt="Image text"></p><p>输入项目名称并按“OK”，将提示使用向导来指定要部署自定义登录页的SharePoint站点，如下图所示：</p><p><img src="/img/static/2018-09-28/sp008.png" alt="Image text"></p><p>需要输入web 站点URL进行验证，同时必须选择Deploy as Server Farm解决方案而不是部署为沙箱解决方案（默认选择）。否则，在部署解决方案时会出错，如下图所示：</p><p><img src="/img/static/2018-09-28/sp009.png" alt="Image text"></p><p>最后，在验证站点URL之后，点击完成。</p><h2 id="创建自定义登录页"><a href="#创建自定义登录页" class="headerlink" title="创建自定义登录页"></a>创建自定义登录页</h2><p>右键项目，添加新项，选择如下图所示：<br><img src="/img/static/2018-09-28/sp010.png" alt="Image text"></p><p>输入登录页面名称后，会自动生成代码。</p><h2 id="修改自定义登录页"><a href="#修改自定义登录页" class="headerlink" title="修改自定义登录页"></a>修改自定义登录页</h2><p>修改登录页，添加用户名和密码的文本框，以及登录按钮，并添加登录方法btnLogin_Click，参考代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">SharePoint:EncodedLiteral</span> <span class="attr">runat</span>=<span class="string">"server"</span> <span class="attr">text</span>=<span class="string">""</span> <span class="attr">EncodeMethod</span>=<span class="string">'HtmlEncode'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">asp:login</span> <span class="attr">id</span>=<span class="string">"loginFormsUser"</span> <span class="attr">FailureText</span>=<span class="string">""</span> <span class="attr">runat</span>=<span class="string">"server"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"ms-input"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">col</span> <span class="attr">width</span>=<span class="string">"25%"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">col</span> <span class="attr">width</span>=<span class="string">"75%"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span> <span class="attr">nowrap</span>=<span class="string">"nowrap"</span>&gt;</span><span class="tag">&lt;<span class="name">SharePoint:EncodedLiteral</span> <span class="attr">runat</span>=<span class="string">"server"</span> <span class="attr">text</span>=<span class="string">""</span> <span class="attr">EncodeMethod</span>=<span class="string">'HtmlEncode'</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span> <span class="attr">nowrap</span>=<span class="string">"nowrap"</span>&gt;</span><span class="tag">&lt;<span class="name">SharePoint:EncodedLiteral</span> <span class="attr">runat</span>=<span class="string">"server"</span> <span class="attr">text</span>=<span class="string">""</span> <span class="attr">EncodeMethod</span>=<span class="string">'HtmlEncode'</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">asp:button</span> <span class="attr">id</span>=<span class="string">"login"</span> <span class="attr">OnClick</span>=<span class="string">"btnLogin_Click"</span> <span class="attr">class</span>=<span class="string">"loginClass"</span> <span class="attr">text</span>=<span class="string">""</span> <span class="attr">runat</span>=<span class="string">"server"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改后运行，结果如下图：<br><img src="/img/static/2018-09-28/sp011.png" alt="Image text"></p><h2 id="修改登录"><a href="#修改登录" class="headerlink" title="修改登录"></a>修改登录</h2><ol><li>修改默认继承类（LayoutsPageBase）为System.Web.UI.Page</li><li>实现登录方法btnLogin_Click，登录方法中调用SetFBACookie，将由FBA提供程序自动验证用户身份，并设置Session Token，代码如下：</li></ol><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnLogin_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> username = <span class="keyword">this</span>.loginFormsUser.FindControl(<span class="string">"UserName"</span>) <span class="keyword">as</span> TextBox;</span><br><span class="line">    <span class="keyword">var</span> password = <span class="keyword">this</span>.loginFormsUser.FindControl(<span class="string">"password"</span>) <span class="keyword">as</span> TextBox;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(username.Text))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> error = <span class="keyword">this</span>.loginFormsUser.FindControl(<span class="string">"FailureText"</span>) <span class="keyword">as</span> Label;</span><br><span class="line">        error.Text = <span class="string">"请输入用户名"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(password.Text))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> error = <span class="keyword">this</span>.loginFormsUser.FindControl(<span class="string">"FailureText"</span>) <span class="keyword">as</span> Label;</span><br><span class="line">            error.Text = <span class="string">"请输入密码"</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        SetFBACookie(HttpContext.Current.Request, username.Text, password.Text);</span><br><span class="line">        <span class="keyword">var</span> returnUrl = Request[<span class="string">"ReturnUrl"</span>];</span><br><span class="line">        Response.Redirect(returnUrl);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> label = <span class="keyword">this</span>.loginFormsUser.FindControl(<span class="string">"FailureText"</span>) <span class="keyword">as</span> Label;</span><br><span class="line">        label.Text = ex.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetFBACookie</span>(<span class="params">HttpRequest r, <span class="keyword">string</span> username, <span class="keyword">string</span> cookieValue</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> (SPSite s = <span class="keyword">new</span> SPSite(r.Url.AbsoluteUri))</span><br><span class="line">    &#123;</span><br><span class="line">        SPIisSettings iis = s.WebApplication.IisSettings[SPUrlZone.Default];</span><br><span class="line">        SPFormsAuthenticationProvider fap = iis.FormsClaimsAuthenticationProvider;</span><br><span class="line">        SecurityToken token = SPSecurityContext.SecurityTokenForFormsAuthentication(<span class="keyword">new</span> Uri(r.Url.GetComponents(UriComponents.Scheme | UriComponents.HostAndPort, UriFormat.Unescaped), UriKind.Absolute), fap.MembershipProvider, fap.RoleProvider, username, cookieValue, SPFormsAuthenticationOption.PersistentSignInRequest);</span><br><span class="line">        SPFederationAuthenticationModule fam = SPFederationAuthenticationModule.Current;</span><br><span class="line">        fam.SetPrincipalAndWriteSessionToken(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证成功后，将自动跳转到首页。</p><h2 id="生成并部署"><a href="#生成并部署" class="headerlink" title="生成并部署"></a>生成并部署</h2><p>右键项目生成dll, 然后点击部署，将自定义登录部署到相应目录下。在sharepoint 2016 中，登录页将会被部署到目录“Program Files\Common Files\microsoft shared\Web Server Extensions\16\TEMPLATE\LAYOUTS”下：<br><img src="/img/static/2018-09-28/sp012.png" alt="Image text"></p><h2 id="配置应用程序的登录页"><a href="#配置应用程序的登录页" class="headerlink" title="配置应用程序的登录页"></a>配置应用程序的登录页</h2><p>在管理中心处修改应用程序的身份验证，将登录页由默认修改为自定义登录页：<br><img src="/img/static/2018-09-28/sp013.png" alt="Image text"></p><p>文件的具体目录参考上一步部署的相对路径。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>浏览器中打开Web Application站点，输入用户名和密码，如下图所示：<br><img src="/img/static/2018-09-28/sp014.png" alt="Image text"></p><p>点击登录后进入Web Application站点的主页，如下图所示：<br><img src="/img/static/2018-09-28/sp006.jpg" alt="Image text"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.mssqltips.com/sqlservertip/3873/creating-and-deploying-a-custom-login-page-for-sharepoint-2010-forms-based-authentication/" target="_blank" rel="noopener">https://www.mssqltips.com/sqlservertip/3873/creating-and-deploying-a-custom-login-page-for-sharepoint-2010-forms-based-authentication/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h2&gt;&lt;p&gt;许多应用需要基于表单身份的认证，而不是经典模式认证。基于表单的身份验证（FBA）是一种基于声明的身份验证。SharePoin
      
    
    </summary>
    
      <category term="SharePoint" scheme="http://gavinhome.github.io/categories/SharePoint/"/>
    
    
      <category term="SharePoint" scheme="http://gavinhome.github.io/tags/SharePoint/"/>
    
  </entry>
  
  <entry>
    <title>SharePoint 2016：自定义表单认证（Forms Based Authentication）</title>
    <link href="http://gavinhome.github.io/2018/09/28/SharePoint%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A1%A8%E5%8D%95%E8%AE%A4%E8%AF%81/"/>
    <id>http://gavinhome.github.io/2018/09/28/SharePoint自定义表单认证/</id>
    <published>2018-09-27T16:00:00.000Z</published>
    <updated>2019-04-01T13:04:32.583Z</updated>
    
    <content type="html"><![CDATA[<p>由于项目的需要，登录SharePoint Application的用户将从一个统一平台中获取，而不是从Domain中获取，所以需要对SharePoint Application的身份验证（Claims Authentication Types）进行更改，即采用更加灵活的模式登录：Forms Based Authentication（FBA）。</p><p>基于表单的身份验证（FBA）是SharePoint支持的身份验证模式之一，它允许我们实现自己的身份验证机制，并帮助扩展非活动目录（AD）用户的SharePoint站点。SharePoint安装完成后，默认使用Active Directory查询用户配置文件并使用Windows身份验证对用户进行身份验证，但是FBA使用与AD一起托管的自定义数据库来存储用户凭证，在这种情况下，使用数据库查询的方式为自定义的FBA提供用户描述。当我们需要将SharePoint暴露到外部世界时，FBA变得非常重要，例如，与客户和供应商共享文档或其他。</p><p>在本文中，介绍SharePoint 2016自定义Providers在基于表单的身份验（Forms-Based-Authentication）中的应用。我们将看到使用SharePoint实现FBA所涉及的所有步骤，并且可以根据每一步的过程图描述该过程。</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>通常需要为sharepoint打通其他的系统整合到sharepoint认证,ad通常是为内部域用户,外网访问的可以使用membership来登录,那么这个既可以内部用户访问,外部用户也可以访问 ,另外也可以把其他的用户加到membership里面。</p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><ol><li>创建Membership Provider和Role Provider</li><li>配置应用程序(application)、管理中心(central administration)、令牌服务程序(secure token service application)</li><li>配置Web Application的身份认证</li><li>配置配置应用程序的人员和角色</li><li>使用人员登录测试</li></ol><h2 id="创建Membership-Provider和Role-Provider"><a href="#创建Membership-Provider和Role-Provider" class="headerlink" title="创建Membership Provider和Role Provider"></a>创建Membership Provider和Role Provider</h2><p>启用VS2017， 选择并创建一个Class Library，创建MembershipProvider和Role Provider，分别继承System.Web.Security.MembershipProvider和System.Web.Security.RoleProvider，实现对应的方法。实现MembershipProvider和Role Provider时可采用直接读取数据库的方式，还可以使用REST方式访问公开的API获取数据。</p><ol><li>自定义MembershipProvider，主要代码如下：</li></ol><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomMembershipProvider</span> : <span class="title">MembershipProvider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Uri BaseUri = <span class="keyword">new</span> Uri(SystemConfigConst.ProviderApiBaseUrl);</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> 重写的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> MembershipUserCollection <span class="title">FindUsersByName</span>(<span class="params"><span class="keyword">string</span> usernameToMatch, <span class="keyword">int</span> pageIndex, <span class="keyword">int</span> pageSize, <span class="keyword">out</span> <span class="keyword">int</span> totalRecords</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            PageIndex = pageIndex,</span><br><span class="line">            PageSize = pageSize,</span><br><span class="line">            UserName = usernameToMatch,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/FindUsersByName"</span>), parameters).ToDataSourcePagedResult&lt;PagedResult&lt;MemberUserInfo&gt;&gt;();</span><br><span class="line">        totalRecords = result.Total;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result.ToMembershipUserCollection(<span class="keyword">this</span>.Name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> MembershipUserCollection <span class="title">GetAllUsers</span>(<span class="params"><span class="keyword">int</span> pageIndex, <span class="keyword">int</span> pageSize, <span class="keyword">out</span> <span class="keyword">int</span> totalRecords</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            PageIndex = pageIndex,</span><br><span class="line">            PageSize = pageSize</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/GetAllUsers"</span>), parameters).ToDataSourcePagedResult&lt;PagedResult&lt;MemberUserInfo&gt;&gt;();</span><br><span class="line">        totalRecords = result.Total;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result.ToMembershipUserCollection(<span class="keyword">this</span>.Name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> MembershipUser <span class="title">GetUser</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">bool</span> userIsOnline</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            UserName = username</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/GetUser"</span>), parameters).ToDataSourcePagedResult&lt;MemberUserInfo&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result != <span class="literal">null</span> ? result.ToMembershipUser(<span class="keyword">this</span>.Name) : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> MembershipUser <span class="title">GetUser</span>(<span class="params"><span class="keyword">object</span> providerUserKey, <span class="keyword">bool</span> userIsOnline</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            UserName = providerUserKey</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/GetUser"</span>), parameters).ToDataSourcePagedResult&lt;MemberUserInfo&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result != <span class="literal">null</span> ? result.ToMembershipUser(<span class="keyword">this</span>.Name) : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">GetUserNameByEmail</span>(<span class="params"><span class="keyword">string</span> email</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            Email = email</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/GetUserNameByEmail"</span>), parameters).ToDataSourcePagedResult&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> MembershipUserCollection <span class="title">FindUsersByEmail</span>(<span class="params"><span class="keyword">string</span> emailToMatch, <span class="keyword">int</span> pageIndex, <span class="keyword">int</span> pageSize, <span class="keyword">out</span> <span class="keyword">int</span> totalRecords</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            PageIndex = pageIndex,</span><br><span class="line">            PageSize = pageSize,</span><br><span class="line">            Email = emailToMatch,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/FindUsersByEmail"</span>), parameters).ToDataSourcePagedResult&lt;PagedResult&lt;MemberUserInfo&gt;&gt;();</span><br><span class="line">        totalRecords = result.Total;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result.ToMembershipUserCollection(<span class="keyword">this</span>.Name);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">ValidateUser</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> password</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> user = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Users/GetUser"</span>), <span class="keyword">new</span> &#123; UserName = username &#125;).ToDataSourcePagedResult&lt;MemberUserInfo&gt;();</span><br><span class="line">        <span class="comment"><span class="doctag">///</span>/简单实现验证用户，不验证密码，用户只存在就可以</span></span><br><span class="line">        <span class="keyword">if</span> (user != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> 暂时不需要重写的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">ChangePassword</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> oldPassword, <span class="keyword">string</span> newPassword</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> ApplicationName</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">ChangePasswordQuestionAndAnswer</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> password, <span class="keyword">string</span> newPasswordQuestion, <span class="keyword">string</span> newPasswordAnswer</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> MembershipUser <span class="title">CreateUser</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> password, <span class="keyword">string</span> email, <span class="keyword">string</span> passwordQuestion, <span class="keyword">string</span> passwordAnswer, <span class="keyword">bool</span> isApproved, <span class="keyword">object</span> providerUserKey,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">out</span> MembershipCreateStatus status</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">DeleteUser</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">bool</span> deleteAllRelatedData</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> EnablePasswordReset</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> EnablePasswordRetrieval</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="title">GetNumberOfUsersOnline</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">GetPassword</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> answer</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> MaxInvalidPasswordAttempts</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> MinRequiredNonAlphanumericCharacters</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> MinRequiredPasswordLength</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> PasswordAttemptWindow</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> MembershipPasswordFormat PasswordFormat</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> PasswordStrengthRegularExpression</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> RequiresQuestionAndAnswer</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> RequiresUniqueEmail</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ResetPassword</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> answer</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">UnlockUser</span>(<span class="params"><span class="keyword">string</span> userName</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">UpdateUser</span>(<span class="params">MembershipUser user</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>自定义Role Provider，如下所示：</li></ol><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomRoleProvider</span> : <span class="title">RoleProvider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Uri BaseUri = <span class="keyword">new</span> Uri(SystemConfigConst.ProviderApiBaseUrl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> ApplicationName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取全部角色</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span>[] <span class="title">GetAllRoles</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Role/GetAllRoles"</span>), <span class="literal">null</span>).ToDataSourcePagedResult&lt;<span class="keyword">string</span>[]&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 根据User得到其相关的角色</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="username"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span>[] <span class="title">GetRolesForUser</span>(<span class="params"><span class="keyword">string</span> username</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            UserName = username,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Role/GetRolesForUser"</span>), parameters).ToDataSourcePagedResult&lt;<span class="keyword">string</span>[]&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 根据角色获取其绑定的用户</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="rolename"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span>[] <span class="title">GetUsersInRole</span>(<span class="params"><span class="keyword">string</span> rolename</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            RoleName = rolename,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Role/GetUsersInRole"</span>), parameters).ToDataSourcePagedResult&lt;<span class="keyword">string</span>[]&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsUserInRole</span>(<span class="params"><span class="keyword">string</span> username, <span class="keyword">string</span> rolename</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> usersForRole = GetUsersInRole(rolename).ToList();</span><br><span class="line">        <span class="keyword">return</span> usersForRole.Where(userName =&gt; userName == username).Count() &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">RoleExists</span>(<span class="params"><span class="keyword">string</span> rolename</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> parameters = <span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            RoleName = rolename,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> result = RestUtil.Post&lt;ResponseInfo&gt;(<span class="keyword">new</span> Uri(BaseUri, <span class="string">"Api/Role/RoleExists"</span>), parameters).ToDataSourcePagedResult&lt;<span class="keyword">bool</span>&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span>[] <span class="title">FindUsersInRole</span>(<span class="params"><span class="keyword">string</span> rolename, <span class="keyword">string</span> usernameToMatch</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;<span class="keyword">string</span>&gt; users = GetUsersInRole(rolename).ToList&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">        List&lt;<span class="keyword">string</span>&gt; foundUsers = users.Where(userName =&gt; userName.ToLowerInvariant().Contains(usernameToMatch.ToLowerInvariant())).ToList&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">        <span class="keyword">return</span> foundUsers.ToArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> 没有实现的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">AddUsersToRoles</span>(<span class="params"><span class="keyword">string</span>[] usernames, <span class="keyword">string</span>[] roleNames</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">CreateRole</span>(<span class="params"><span class="keyword">string</span> roleName</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">DeleteRole</span>(<span class="params"><span class="keyword">string</span> roleName, <span class="keyword">bool</span> throwOnPopulatedRole</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">RemoveUsersFromRoles</span>(<span class="params"><span class="keyword">string</span>[] usernames, <span class="keyword">string</span>[] roleNames</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置Web-Config"><a href="#配置Web-Config" class="headerlink" title="配置Web Config"></a>配置Web Config</h2><p>自定义的Provider成功安装到GAC之后，接着修改web.config。注意需要修改3个地方，Web Application Config、SharePoint Central Administration Config、SecurityTokenServiceApplication，其路径如果记不住的话，打开IIS，浏览即可，即如下所示：<br><img src="/img/static/2018-09-28/sp001.jpg" alt="Image text"></p><ol><li>首先修改Web Application的Web Config，找到其Membership节点，将以下代码复制进：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">membership</span> <span class="attr">defaultProvider</span>=<span class="string">"i"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"i"</span> <span class="attr">type</span>=<span class="string">"Microsoft.SharePoint.Administration.Claims.SPClaimsAuthMembershipProvider, Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"CustomMembershipProvider"</span> <span class="attr">type</span>=<span class="string">"TZIWB.CustomProvider.CustomMembershipProvider,TZIWB.CustomProvider"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">membership</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">roleManager</span> <span class="attr">cacheRolesInCookie</span>=<span class="string">"false"</span> <span class="attr">defaultProvider</span>=<span class="string">"c"</span> <span class="attr">enabled</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"c"</span> <span class="attr">type</span>=<span class="string">"Microsoft.SharePoint.Administration.Claims.SPClaimsAuthRoleProvider, Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"CustomRoleProvider"</span> <span class="attr">type</span>=<span class="string">"TZIWB.CustomProvider.CustomRoleProvider,TZIWB.CustomProvider"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">roleManager</span>&gt;</span></span><br></pre></td></tr></table></figure><p>找到其PeoplePickerWildcards节点，将以下代码复制进：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PeoplePickerWildcards</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">clear</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"CustomMembershipProvider"</span> <span class="attr">value</span>=<span class="string">"%"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">PeoplePickerWildcards</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>接着修改SharePoint Central Administration的Web Config：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">membership</span> <span class="attr">defaultProvider</span>=<span class="string">"i"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"i"</span> <span class="attr">type</span>=<span class="string">"Microsoft.SharePoint.Administration.Claims.SPClaimsAuthMembershipProvider, Microsoft.SharePoint, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"CustomMembershipProvider"</span> <span class="attr">type</span>=<span class="string">"TZIWB.CustomProvider.CustomMembershipProvider,TZIWB.CustomProvider"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">membership</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">roleManager</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"c"</span> <span class="attr">type</span>=<span class="string">"Microsoft.SharePoint.Administration.Claims.SPClaimsAuthRoleProvider, Microsoft.SharePoint, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"CustomRoleProvider"</span> <span class="attr">type</span>=<span class="string">"TZIWB.CustomProvider.CustomRoleProvider,TZIWB.CustomProvider"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">roleManager</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>然后修改SecurityTokenSeriveApplication的Web Config，将一下配置添加到configurations节点下：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">roleManager</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"CustomRoleProvider"</span> <span class="attr">type</span>=<span class="string">"TZIWB.CustomProvider.CustomRoleProvider,TZIWB.CustomProvider"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">roleManager</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">membership</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"CustomMembershipProvider"</span> <span class="attr">type</span>=<span class="string">"TZIWB.CustomProvider.CustomMembershipProvider,TZIWB.CustomProvider"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">membership</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">system.web</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置Web-Application的身份验证"><a href="#配置Web-Application的身份验证" class="headerlink" title="配置Web Application的身份验证"></a>配置Web Application的身份验证</h2><p>进入SharePoint 2016 Central Administration-Application Management-Manage Web Applications-Authentication Providers，即如下所示：<br><img src="/img/static/2018-09-28/sp002.jpg" alt="Image text"></p><p>点击默认，勾选FBA，并配置自定义Menbership Provider和Role Provider的名称，如下图所示：</p><p><img src="/img/static/2018-09-28/sp003.jpg" alt="Image text"></p><p>最后将自定义提供程序生成的dll全部拷贝到Web Application Config、SharePoint Central Administration Config、SecurityTokenServiceApplication的bin目录下。</p><h2 id="配置人员、角色权限"><a href="#配置人员、角色权限" class="headerlink" title="配置人员、角色权限"></a>配置人员、角色权限</h2><p>成功为Web Application创建了自定义的Provider之后，接着就是测试是否成功。如添加访问用户，可以如下图操作所示：</p><p>以管理员登录，选择设置-网站设置：<br><img src="/img/static/2018-09-28/sp004.jpg" alt="Image text"></p><p>点击新建，输入员工登录名或角色名，系统自动调用上面创建的提供程序，并筛选出符合条件的用户或角色，添加后，则在列表上可以查看：<br><img src="/img/static/2018-09-28/sp005.jpg" alt="Image text"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>浏览器中打开Web Application站点，选择FORMS认证方式，输入用户名和密码，点击登录后进入Web Application站点的主页，如下图所示：<br><img src="/img/static/2018-09-28/sp006.jpg" alt="Image text"></p><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><p>如果采用REST访问其他服务器来获取数据，Sharepoint可能会报一个错误：Dynamic operations can only be performed in homogenous AppDomain，一般会在日志目录下看到，Sharepoint 2016的日志在目录”Program Files\Common Files\microsoft shared\Web Server Extensions\16\LOGS”下。</p><p>若要解决以上错误，候需要修改配置文件：</p><p>将配置文件中的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trust</span> <span class="attr">level</span>=<span class="string">”Full”</span> <span class="attr">originUrl</span>=<span class="string">””</span> <span class="attr">legacyCasModel</span>=<span class="string">”true”</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trust</span> <span class="attr">level</span>=<span class="string">”Full”</span>  /&gt;</span></span><br></pre></td></tr></table></figure><p>在节点configuration-&gt;runtime下添加以下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">NetFx40_LegacySecurityPolicy</span> <span class="attr">enabled</span>=<span class="string">”false”/</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果能在三个站点（应用程序、管理中心、、令牌服务程序）找到以上配置，请修改。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li>微软的官方文档：<br><a href="https://docs.microsoft.com/zh-cn/previous-versions/office/developer/sharepoint-2010/gg317440(v=office.14)" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/previous-versions/office/developer/sharepoint-2010/gg317440(v=office.14)</a></li><li>使用自定义数据库访问人员或角色的例子：<br><a href="https://social.technet.microsoft.com/wiki/contents/articles/38459.sharepoint-2016-forms-based-authentication-part-1.aspx" target="_blank" rel="noopener">https://social.technet.microsoft.com/wiki/contents/articles/38459.sharepoint-2016-forms-based-authentication-part-1.aspx</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于项目的需要，登录SharePoint Application的用户将从一个统一平台中获取，而不是从Domain中获取，所以需要对SharePoint Application的身份验证（Claims Authentication Types）进行更改，即采用更加灵活的模式
      
    
    </summary>
    
      <category term="SharePoint" scheme="http://gavinhome.github.io/categories/SharePoint/"/>
    
    
      <category term="SharePoint" scheme="http://gavinhome.github.io/tags/SharePoint/"/>
    
  </entry>
  
  <entry>
    <title>决策树与随机森林</title>
    <link href="http://gavinhome.github.io/2018/02/08/%E5%86%B3%E7%AD%96%E6%A0%91%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    <id>http://gavinhome.github.io/2018/02/08/决策树和随机森林/</id>
    <published>2018-02-08T02:50:00.000Z</published>
    <updated>2019-04-01T13:04:32.584Z</updated>
    
    <content type="html"><![CDATA[<h2 id="信息熵与信息增益"><a href="#信息熵与信息增益" class="headerlink" title="信息熵与信息增益"></a>信息熵与信息增益</h2><p>决策树是一种树型结构，其中每个内部结点表示在一个属性上的测试，每个分支代表一个测试输出，每个叶结点代表一种类别；决策树学习以实例为基础的归纳学习算法，采用自顶向下的递归方法，基本思想是以信息熵为度量构造一棵熵值下降最快的树，到叶子节点处的熵值为零，此时每个叶子结点中的实例都是同一类。</p><h3 id="信息增益"><a href="#信息增益" class="headerlink" title="信息增益"></a>信息增益</h3><p>当熵和条件熵中的概率由数据估计（特极大似然估计）得到时，所对应的<br>熵和条件熵成为经验熵和经验条件熵。</p><p>信息增益表示得知特征A的信息而使得类X的不确定性减少的程度。</p><p>定义：特征A对训练集D的信息增益$g\left(D,A\right)$, 定义为集合D的经验熵$H\left(D\right)$与特征A给定条件下D的经验条件熵</p><p>$H \left( D|A \right)$<br>之差，即：</p><p>$$g\left(D,A\right) = H\left(D\right) - H\left(D|A\right)$$</p><p>显然，这即为训练数据集D和特征A的互信息</p><h3 id="信息增益率"><a href="#信息增益率" class="headerlink" title="信息增益率"></a>信息增益率</h3><h3 id="基本记号"><a href="#基本记号" class="headerlink" title="基本记号"></a>基本记号</h3><ol><li><p>设训练集D,<br>$\left| D \right|$ 表示样本个数。</p></li><li><p>设K个类 $C_k$,k=1,2,…K,<br>$\left|C_k\right|$为属于类$C_k$<br>的样本个数，有: $\sum\left|C_k\right| = |D|$</p></li><li><p>设特征A有n个不同的取值${a_{1},a_{2}…a_{n}}$,<br>根据特征A的取值将D划分为n个子集$D_{1},D_{2}…D_{n}$,$\left|D_i\right|$为$D_i$<br>的样本个数，$\sum\left|D_i\right| = \left|D\right|$</p></li><li><p>设子集$\left|D_i\right|$<br>中属于类$C_k$<br>的样本集合为$\left|D_{ik}\right|$, $\left|D_{ik}\right|$为$D_{ik}$的样本个数</p></li></ol><h2 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h2><p>建立决策树的关键是选择哪个属性作为分类依据，根据不同的目标函数，共有三种方法来：</p><ol><li><p>ID3: 使用信息增益/互信息进行特征选择。取值多的属性，更容易使数据更纯，其信息增益更大。</p></li><li><p>C4.5: 信息增益率：</p></li><li><p>CART: Gini系数</p></li></ol><p>一个属性的信息增益越大，表明属性对样本的熵减少的能力越强，这个属性使得数据由不确定性变为确定性的能力越强。</p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>$$C\left(T\right) = \sum_{} N_{t}H\left(t\right)$$</p><h3 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h3><p>决策树与训练数据有很好的分类问题，但对未知的册书数据未必有好的分类能力，泛化能力弱，即可能发生过拟合现象。</p><h4 id="剪枝"><a href="#剪枝" class="headerlink" title="剪枝"></a>剪枝</h4><p>总体思路是：由完全树T0开始，剪枝部分结点得到T1，再次剪枝部分结点得到T2…直到仅剩树根的树Tk;在验证数据集上对k个树分别评价，选择损失函数最小的树Ta.三种决策树的过程相同，却别是评价标准不同：信息增益，信息增益率，基尼系数。</p><p>剪枝算法：<br>给定决策时T0</p><ol><li>计算所有内部节点的剪枝系数</li><li>查找最小剪枝系数的节点，剪枝的决策树TK</li><li>重复以上步骤，知道决策树TK只有一个节点</li><li>得到T0T1T2…TK</li><li>使用验证眼样本集选择最优子树, 标准为平价函数(损失函数): </li></ol><p>$$C\left(T\right) = \sum_{} N_{t}H\left(t\right)$$</p><h2 id="Bagging与随机森林"><a href="#Bagging与随机森林" class="headerlink" title="Bagging与随机森林"></a>Bagging与随机森林</h2><h3 id="Bagging策略"><a href="#Bagging策略" class="headerlink" title="Bagging策略"></a>Bagging策略</h3><ol><li>bootstrap aggregation</li><li>从样本集中重采样选出n个样本</li><li>在所有属性上，对n个样本建立分类器</li><li>重复以上两步m次，获得了m个分类器</li><li>将数据放在这m个分类器上，最后根据这m个分类器的投票结果，决定数据属于哪一类</li></ol><h3 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h3><ol><li>从样本集中用bootstrap采样选出n个样本</li><li>从所有属性中随机选择K个属性，选择最佳分割属性作为节点建立CART决策树</li><li>重复以上两步m次，建立m棵CART决策树</li><li>这m个CART形成随机森林，通过投票表决结果</li></ol><p>可以使用决策树，svm或逻辑回归等，总称为“随机森林”</p><h3 id="投票机制"><a href="#投票机制" class="headerlink" title="投票机制"></a>投票机制</h3><ol><li><p>简单投票：一票否决；少数服从多数，有效多数（加权）；阈值表决</p></li><li><p>贝叶斯投票</p></li></ol><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h4 id="决策树-1"><a href="#决策树-1" class="headerlink" title="决策树"></a>决策树</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span>  datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris, load_digits</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">X = iris.data</span><br><span class="line">y = iris.target</span><br><span class="line">x = X[:,:<span class="number">2</span>]</span><br><span class="line">x__train, x__test, y__train, y__test = train_test_split(x, y, test_size=<span class="number">0.33</span>)</span><br><span class="line">dt_clf = tree.DecisionTreeClassifier(criterion=<span class="string">'entropy'</span>, min_samples_leaf=<span class="number">3</span>)</span><br><span class="line">dt_clf = dt_clf.fit(x, y)</span><br><span class="line"></span><br><span class="line">N, M = <span class="number">500</span>, <span class="number">500</span></span><br><span class="line">x1_min, x1_max = x[:,<span class="number">0</span>].min(),x[:,<span class="number">0</span>].max()</span><br><span class="line">x2_min, x2_max = x[:,<span class="number">1</span>].min(),x[:,<span class="number">1</span>].max()</span><br><span class="line">t1 = np.linspace(x1_min,x1_max,N)</span><br><span class="line">t2 = np.linspace(x2_min,x2_max,M)</span><br><span class="line">x1,x2 = np.meshgrid(t1, t2)</span><br><span class="line">x___test = np.stack((x1.flat,x2.flat), axis=<span class="number">1</span>)</span><br><span class="line">y_hat = dt_clf.predict(x___test)</span><br><span class="line">y_hat = y_hat.reshape(x1.shape)</span><br><span class="line">plt.pcolormesh(x1,x2,y_hat,cmap=plt.cm.prism)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>], c=y, edgecolors=<span class="string">'k'</span>,cmap=plt.cm.prism)</span><br><span class="line">plt.xlabel(<span class="string">'Sepal Length'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Sepal Width'</span>)</span><br><span class="line">plt.xlim(x1_min, x1_max)</span><br><span class="line">plt.ylim(x2_min, x2_max)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.33</span>)</span><br><span class="line">clf = tree.DecisionTreeClassifier(criterion=<span class="string">'entropy'</span>, min_samples_leaf=<span class="number">3</span>)</span><br><span class="line">clf.fit(X_train, y_train)</span><br><span class="line">y_pred = clf.predict(X_test)</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"iris_tree.dot"</span>,<span class="string">'w'</span>)</span><br><span class="line">tree.export_graphviz(clf, out_file=f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># evaluating accuracy</span></span><br><span class="line">accuracy = accuracy_score(y_true=y_test, y_pred=y_pred)</span><br><span class="line">print(<span class="string">'Accuracy : &#123;&#125;'</span>.format(accuracy))</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="/img/static/2018-01-28/figure_1.png" alt="png"></p> <p>分类准确率为：0.94</p><h4 id="随机森林-1"><a href="#随机森林-1" class="headerlink" title="随机森林"></a>随机森林</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> ensemble</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span>  datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris, load_digits</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl <span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment"># 绘图专用</span></span><br><span class="line"></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">X = iris.data</span><br><span class="line">y = iris.target</span><br><span class="line"></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.33</span>)</span><br><span class="line">clf = ensemble.RandomForestClassifier(criterion=<span class="string">'entropy'</span>, min_samples_leaf=<span class="number">2</span>, max_depth=<span class="number">10</span>,min_samples_split=<span class="number">3</span>)</span><br><span class="line">clf.fit(X_train, y_train)</span><br><span class="line">y_pred = clf.predict(X_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># evaluating accuracy</span></span><br><span class="line">accuracy = accuracy_score(y_true=y_test, y_pred=y_pred)</span><br><span class="line">print(<span class="string">'Accuracy : &#123;&#125;'</span>.format(accuracy))</span><br></pre></td></tr></table></figure><p>分类结果为：0.96</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>决策树与随机森林使用简单，可以作为对数据分布探索的首要尝试算法。</li><li>随机森林的集成思想也可用于其他分类器的设计中。如果通过随机森林做样本异常值检测，则总计样本间位于相同决策树的叶节点的个数，形成样本相似度矩阵。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;信息熵与信息增益&quot;&gt;&lt;a href=&quot;#信息熵与信息增益&quot; class=&quot;headerlink&quot; title=&quot;信息熵与信息增益&quot;&gt;&lt;/a&gt;信息熵与信息增益&lt;/h2&gt;&lt;p&gt;决策树是一种树型结构，其中每个内部结点表示在一个属性上的测试，每个分支代表一个测试输出，每个
      
    
    </summary>
    
      <category term="机器学习" scheme="http://gavinhome.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://gavinhome.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>支持向量机（SVM）</title>
    <link href="http://gavinhome.github.io/2018/01/27/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/"/>
    <id>http://gavinhome.github.io/2018/01/27/支持向量机/</id>
    <published>2018-01-27T13:50:00.000Z</published>
    <updated>2019-04-01T13:04:32.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="假设"><a href="#假设" class="headerlink" title="假设"></a>假设</h2><p>假设给定一个特征空间上的训练数据集：</p><p>$$T=\left { \left ( x_{1},y_{1} \right ),\left ( x_{2},y_{2} \right )… \left (x_{N},y_{N} \right) \right }, x_{i}\in R^{n}$$</p><p>其中$x_{i}\in R^{n}, y_{i}\in { +1,-1 },i=1,2,…N$</p><ol><li><p>$x_{i}$为第i个实例，N&gt;1, $x_{i}$为向量</p></li><li><p>$y_{i}$为$x_{i}$的类标记，即:当$y_{i}=+1$时， 称为$x_{i}$正例；当$y_{i}=-1$时， 称为$x_{i}$负例。</p></li><li><p>$\left(x_{i},y_{i} \right)$ 称为样本点</p></li></ol><h2 id="线性可分支持向量机"><a href="#线性可分支持向量机" class="headerlink" title="线性可分支持向量机"></a>线性可分支持向量机</h2><p>给定线性可分训练数据集，通过间隔最大化得到的分离超平面为</p><p>$$\omega^{T}\cdot\Phi \left ( x \right )+b=0$$</p><p>相应的分类决策函数$f\left ( x \right ) = sign\left ( \omega^{T}\cdot\Phi \left ( x \right )+b \right )$, 称为线性可分支持向量机。$\Phi\left(x\right)$是某个确定的特征空间转换函数，将$x$映射到更高维度。</p><h3 id="推导目标函数"><a href="#推导目标函数" class="headerlink" title="推导目标函数"></a>推导目标函数</h3><p>设$y\left(x\right)=\omega^{T}\cdot\Phi \left ( x \right )+b$, 有：$y_{i}\cdot y\left(x\right) &gt; 0$，对参数进行等比例缩放，从而：</p><p>$$\frac{y_{i}\cdot y\left(x\right)}{\left | \omega  \right |}=\frac{y_{i}\cdot\left ( \omega^{T}\cdot\Phi \left ( x_{i} \right )+b \right ) }{\left | \omega  \right |}$$</p><p>目标函数：</p><p>$$max\left { \frac{1}{\left | \omega  \right |} min\left [ y_{i}\cdot\left ( \omega^{T}\cdot\Phi \left ( x_{i} \right )+b \right )  \right ]\right }$$</p><p>约束条件：</p><p>$$y_{i}\cdot\left ( \omega^{T}\cdot\Phi \left ( x_{i} \right )+b \right)\geqslant 1$$</p><p>通过等比例缩放的方法，将两类函数值的绝对值满足大于等于1，则新目标函数：</p><p>$$max \frac{1}{\left | \omega  \right |}$$</p><p>为计算需要，转换得：</p><p>$$min \frac{1}{2}\left | \omega  \right |^{2}$$</p><h3 id="拉格朗日乘子法求解"><a href="#拉格朗日乘子法求解" class="headerlink" title="拉格朗日乘子法求解"></a>拉格朗日乘子法求解</h3><p>$$L\left ( \omega ,b,\alpha  \right ) = \frac{1}{2}\left | \omega  \right |^{2}-\sum_{i=1}^{n} \alpha <em>{i}\left ( y</em>{i}\cdot\left ( \omega^{T}\cdot\Phi \left ( x_{i} \right )+b \right)-1 \right )$$</p><p>原问题的极小极大问题，其对偶问题是极大极小问题：</p><p>$$min\: max L\left ( \omega ,b,\alpha  \right ) \Rightarrow max\:minL\left ( \omega ,b,\alpha  \right )$$</p><p>将拉格朗日函数L分别对w,b求偏导：</p><p>$$\frac{\partial L}{\partial \omega }=0 \Rightarrow \omega =\sum_{i=1}^{n}\alpha <em>{i}y</em>{i}\Phi \left ( x_{i} \right )$$</p><p>$$\frac{\partial L}{\partial b}=0 \Rightarrow 0 =\sum_{i=1}^{n}\alpha <em>{i}y</em>{i}$$</p><p>代入拉格朗日函数，推导得：</p><p>$$\alpha ^{*} = max\left { \sum_{i=1}^{n}\alpha_{i} - \frac{1}{2}\sum_{i,j=1}^{n}\alpha_{i}\alpha_{j}y_{i}y_{j}\Phi^{T}\left ( x_{i} \right ) \Phi \left ( x_{j} \right ) \right }$$</p><p>即：</p><p>$$min\left { \frac{1}{2}\sum_{i=1}^{n}\sum_{j=1}^{n}\alpha_{i}\alpha_{j}y_{i}y_{j}\left(\Phi\left ( x_{i} \right ) \Phi \left ( x_{j} \right )\right) -\sum_{i=1}^{n}\alpha_{i} \right }$$</p><p>$$\sum_{i=1}^{n}\alpha_{i}y_{i}=0, \alpha_{i}\geqslant 1, i=1,2,…,n$$</p><h3 id="线性可分支持向量机学习算法"><a href="#线性可分支持向量机学习算法" class="headerlink" title="线性可分支持向量机学习算法"></a>线性可分支持向量机学习算法</h3><ol><li>计算：</li></ol><p>$$\omega^{<em>}=\sum_{i=1}^{n}\alpha_{i}^{</em>}y_{i}\Phi\left( x_{i} \right)$$</p><p>$$b^{<em>}=y_{i} - \sum_{i=1}^{n}\alpha_{i}^{</em>}y_{i}\left(\Phi\left ( x_{i} \right ) \cdot \Phi \left ( x_{j} \right )\right) $$</p><ol start="2"><li>求的超平面</li></ol><p>$$\omega^{<em>}\cdot\Phi \left ( x \right )+b^{</em>}=0$$</p><ol start="3"><li>分类决策函数</li></ol><p>$$f\left ( x \right ) = sign\left ( \omega^{<em>}\cdot\Phi \left ( x \right )+b^{</em>} \right )$$</p><h2 id="线性支持向量机"><a href="#线性支持向量机" class="headerlink" title="线性支持向量机"></a>线性支持向量机</h2><p>若数据线性不可分，则增加松弛因子$\xi _{i}\geqslant 0$，使函数间隔加上松弛度量大于等于1，即约束条件变为：</p><p>$$y_{i}\left(\omega \cdot x_{i}+ b \right)\geqslant 1-\xi_{i}$$</p><p>线性svm的目标函数：</p><p>$$min \frac{1}{2} |\omega|^{2} + C\sum_{i=1}^{N}\xi_{i}, \:\:\xi_{i} \geqslant 0, i=1,2,…,n$$</p><p>带松弛因子的SVM拉格朗日函数：</p><p>$$L\left(\omega,b,\xi,\alpha,\mu\right)\equiv \frac{1}{2}|\omega|^2 + C\sum_{i=1}^{n}\xi_{i} - \sum_{i=1}^{n} \alpha <em>{i}\left ( y</em>{i}\left ( \omega\cdot\Phi \left ( x_{i} \right )+b \right)-1 +\xi_{i}\right ) - \sum_{i=1}^{n}\mu_{i}\xi_{i}$$</p><p>对$\omega,b,\xi$求偏导：</p><p>$$\frac{\partial L}{\partial \omega }=0 \Rightarrow \omega =\sum_{i=1}^{n}\alpha <em>{i}y</em>{i}\Phi \left ( x_{i} \right )$$</p><p>$$\frac{\partial L}{\partial b}=0 \Rightarrow 0 =\sum_{i=1}^{n}\alpha <em>{i}y</em>{i}$$</p><p>$$\frac{\partial L}{\partial \xi_{i}}=0 \Rightarrow C - \alpha_{i} - \mu_{i} = 0$$</p><p>代入目标函数，得：<br></p><p>$$min\: L\left(\omega,b,\xi,\alpha,\mu\right)=-\frac{1}{2}\sum_{i=1}^{n}\sum_{j=1}^{n}\alpha_{i}\alpha_{j}y_{i}y_{j}\Phi^{T}\left ( x_{i} \right ) \Phi \left ( x_{j} \right ) + \sum_{i=1}^{n} \alpha_{i}$$</p><p>对上式求关于$\alpha$得极大，得到：</p><p>$$max\: -\frac{1}{2}\sum_{i=1}^{n}\sum_{j=1}^{n}\alpha_{i}\alpha_{j}y_{i}y_{j}\Phi^{T}\left ( x_{i} \right ) \Phi \left ( x_{j} \right ) + \sum_{i=1}^{n} \alpha_{i}$$</p><p>$$\sum_{i=1}^{n}\alpha_{i}y_{i}=0$$</p><p>$$C - \alpha_{i} - \mu_{i} = 0$$</p><p>$$0\leqslant \alpha_{i}\leqslant C$$</p><p>$$\mu_{i} \geqslant 0, \:\: i=1,2,…,n$$</p><p>对偶问题：</p><p>$$min\: \frac{1}{2}\sum_{i=1}^{n}\sum_{j=1}^{n}\alpha_{i}\alpha_{j}y_{i}y_{j}\Phi^{T}\left ( x_{i} \right ) \Phi \left ( x_{j} \right ) - \sum_{i=1}^{n} \alpha_{i}$$</p><h3 id="线性支持向量机学习算法"><a href="#线性支持向量机学习算法" class="headerlink" title="线性支持向量机学习算法"></a>线性支持向量机学习算法</h3><ol><li>计算：</li></ol><p>$$\omega^{<em>}=\sum_{i=1}^{n}\alpha_{i}^{</em>}y_{i}\Phi\left( x_{i} \right)$$</p><p>$$b^{<em>}=y_{i} - \sum_{i=1}^{n}\alpha_{i}^{</em>}y_{i}\left(\Phi\left ( x_{i} \right ) \cdot \Phi \left ( x_{j} \right )\right) $$</p><p>计算时，需要满足条件$0&lt;\alpha_{j}&lt;C$的向量，实践中往往取支持向量的所有值取平均，作为$b^{*}$</p><ol start="2"><li>求的超平面</li></ol><p>$$\omega^{<em>}\cdot\Phi \left ( x \right )+b^{</em>}=0$$</p><ol start="3"><li>分类决策函数</li></ol><p>$$f\left ( x \right ) = sign\left ( \omega^{<em>}\cdot\Phi \left ( x \right )+b^{</em>} \right )$$</p><h2 id="非线性支持向量机"><a href="#非线性支持向量机" class="headerlink" title="非线性支持向量机"></a>非线性支持向量机</h2><h3 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h3><p>可以使用和函数，将原始输入空间映射到新的特征空间，从而使得原本线性不可分的样本可能在核空间可分。</p><ol><li><p>多项式和函数： $\kappa\left(x_{1},x_{2}\right)=\left(x_{1} \cdot x_{2} + c \right)^{d}$</p></li><li><p>高斯核RBF函数：$\kappa\left(x_{1},x_{2}\right)=exp\left( - \gamma \cdot |x_{1} - x_{2}|^{2} \right)$</p></li><li><p>Sigmoid核函数：$\kappa\left(x_{1},x_{2}\right)=tanh\left(x_{1} \cdot x_{2} + c \right)$</p></li></ol><p>在实际应用中，往往依赖先验领域知识或交叉验证等方案才能选择有效的核函数，如果没有更多先验信息，则使用高斯核函数。</p><h2 id="实践1-鸢尾花分类"><a href="#实践1-鸢尾花分类" class="headerlink" title="实践1-鸢尾花分类"></a>实践1-鸢尾花分类</h2><p>1.python实现鸢尾花分类代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span>  train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">x = iris.data</span><br><span class="line">y = iris.target</span><br><span class="line"></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=<span class="number">1</span>, test_size=<span class="number">0.6</span>)</span><br><span class="line"></span><br><span class="line">clf = svm.SVC(C=<span class="number">0.1</span>, kernel=<span class="string">'linear'</span>, decision_function_shape=<span class="string">'ovr'</span>)</span><br><span class="line">clf.fit(x_train, y_train.ravel())</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> clf.score(x_train, y_train)  <span class="comment"># 精度</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'训练集准确率：'</span>, accuracy_score(y_train, clf.predict(x_train))</span><br><span class="line"><span class="keyword">print</span> clf.score(x_test, y_test)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'测试集准确率：'</span>, accuracy_score(y_test, clf.predict(x_test))</span><br></pre></td></tr></table></figure><p>2.鸢尾花分类结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">训练集准确率： <span class="number">0.966666666667</span></span><br><span class="line">测试集准确率： <span class="number">0.944444444444</span></span><br></pre></td></tr></table></figure><h2 id="实践2-手写体"><a href="#实践2-手写体" class="headerlink" title="实践2-手写体"></a>实践2-手写体</h2><p>1.python实现手写体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm</span><br><span class="line"><span class="keyword">import</span> matplotlib.colors</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_accuracy</span><span class="params">(a, b, tip)</span>:</span></span><br><span class="line">    acc = a.ravel() == b.ravel()</span><br><span class="line">    <span class="keyword">print</span> tip + <span class="string">'正确率：%.2f%%'</span> % (<span class="number">100</span>*np.mean(acc))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_image</span><span class="params">(im, i)</span>:</span></span><br><span class="line">    im *= <span class="number">15.9375</span></span><br><span class="line">    im = <span class="number">255</span> - im</span><br><span class="line">    a = im.astype(np.uint8)</span><br><span class="line">    output_path = <span class="string">'.\\HandWritten'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_path):</span><br><span class="line">        os.mkdir(output_path)</span><br><span class="line">    Image.fromarray(a).save(output_path + (<span class="string">'\\%d.png'</span> % i))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Load Training File Start...'</span></span><br><span class="line">    data = np.loadtxt(<span class="string">'./data/optdigits.tra'</span>, dtype=np.float, delimiter=<span class="string">','</span>)</span><br><span class="line">    x, y = np.split(data, (<span class="number">-1</span>, ), axis=<span class="number">1</span>)</span><br><span class="line">    images = x.reshape(<span class="number">-1</span>, <span class="number">8</span>, <span class="number">8</span>)</span><br><span class="line">    y = y.ravel().astype(np.int)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Load Test Data Start...'</span></span><br><span class="line">    data = np.loadtxt(<span class="string">'./data/optdigits.tes'</span>, dtype=np.float, delimiter=<span class="string">','</span>)</span><br><span class="line">    x_test, y_test = np.split(data, (<span class="number">-1</span>, ), axis=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> y_test.shape</span><br><span class="line">    images_test = x_test.reshape(<span class="number">-1</span>, <span class="number">8</span>, <span class="number">8</span>)</span><br><span class="line">    y_test = y_test.ravel().astype(np.int)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Load Data OK...'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># x, x_test, y, y_test = train_test_split(x, y, test_size=0.4, random_state=1)</span></span><br><span class="line">    <span class="comment"># images = x.reshape(-1, 8, 8)</span></span><br><span class="line">    <span class="comment"># images_test = x_test.reshape(-1, 8, 8)</span></span><br><span class="line"></span><br><span class="line">    matplotlib.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">u'SimHei'</span>]</span><br><span class="line">    matplotlib.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">15</span>, <span class="number">9</span>), facecolor=<span class="string">'w'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, image <span class="keyword">in</span> enumerate(images[:<span class="number">16</span>]):</span><br><span class="line">        plt.subplot(<span class="number">4</span>, <span class="number">8</span>, index + <span class="number">1</span>)</span><br><span class="line">        plt.imshow(image, cmap=plt.cm.gray_r, interpolation=<span class="string">'nearest'</span>)</span><br><span class="line">        plt.title(<span class="string">u'训练图片: %i'</span> % y[index])</span><br><span class="line">    <span class="keyword">for</span> index, image <span class="keyword">in</span> enumerate(images_test[:<span class="number">16</span>]):</span><br><span class="line">        plt.subplot(<span class="number">4</span>, <span class="number">8</span>, index + <span class="number">17</span>)</span><br><span class="line">        plt.imshow(image, cmap=plt.cm.gray_r, interpolation=<span class="string">'nearest'</span>)</span><br><span class="line">        save_image(image.copy(), index)</span><br><span class="line">        plt.title(<span class="string">u'测试图片: %i'</span> % y_test[index])</span><br><span class="line">    plt.tight_layout()</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># params = &#123;'C':np.logspace(0, 3, 7), 'gamma':np.logspace(-5, 0, 11)&#125;</span></span><br><span class="line">    <span class="comment"># model = GridSearchCV(svm.SVC(kernel='rbf'), param_grid=params, cv=3)</span></span><br><span class="line">    model = svm.SVC(C=<span class="number">10</span>, kernel=<span class="string">'rbf'</span>, gamma=<span class="number">0.001</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Start Learning...'</span></span><br><span class="line">    t0 = time()</span><br><span class="line">    model.fit(x, y)</span><br><span class="line">    t1 = time()</span><br><span class="line">    t = t1 - t0</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'训练+CV耗时：%d分钟%.3f秒'</span> % (int(t/<span class="number">60</span>), t - <span class="number">60</span>*int(t/<span class="number">60</span>))</span><br><span class="line">    <span class="comment"># print '最优参数：\t', model.best_params_</span></span><br><span class="line">    <span class="comment">#clf.fit(x, y)</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Learning is OK...'</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'训练集准确率：'</span>, accuracy_score(y, model.predict(x))</span><br><span class="line">    y_hat = model.predict(x_test)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'测试集准确率：'</span>, accuracy_score(y_test, model.predict(x_test))</span><br><span class="line">    <span class="keyword">print</span> y_hat</span><br><span class="line">    <span class="keyword">print</span> y_test</span><br><span class="line"></span><br><span class="line">    err_images = images_test[y_test != y_hat]</span><br><span class="line">    err_y_hat = y_hat[y_test != y_hat]</span><br><span class="line">    err_y = y_test[y_test != y_hat]</span><br><span class="line">    <span class="keyword">print</span> err_y_hat</span><br><span class="line">    <span class="keyword">print</span> err_y</span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, <span class="number">8</span>), facecolor=<span class="string">'w'</span>)</span><br><span class="line">    <span class="keyword">for</span> index, image <span class="keyword">in</span> enumerate(err_images):</span><br><span class="line">        <span class="keyword">if</span> index &gt;= <span class="number">12</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        plt.subplot(<span class="number">3</span>, <span class="number">4</span>, index + <span class="number">1</span>)</span><br><span class="line">        plt.imshow(image, cmap=plt.cm.gray_r, interpolation=<span class="string">'nearest'</span>)</span><br><span class="line">        plt.title(<span class="string">u'错分为：%i，真实值：%i'</span> % (err_y_hat[index], err_y[index]))</span><br><span class="line">    plt.tight_layout()</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>2.实验结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Load Training File Start...</span><br><span class="line">Load Test Data Start...</span><br><span class="line">(<span class="number">1797L</span>, <span class="number">1L</span>)</span><br><span class="line">Load Data OK...</span><br><span class="line">Start Learning...</span><br><span class="line">训练+CV耗时：<span class="number">0</span>分钟<span class="number">0.632</span>秒</span><br><span class="line">Learning <span class="keyword">is</span> OK...</span><br><span class="line">训练集准确率： <span class="number">1.0</span></span><br><span class="line">测试集准确率： <span class="number">0.982749026155</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;假设&quot;&gt;&lt;a href=&quot;#假设&quot; class=&quot;headerlink&quot; title=&quot;假设&quot;&gt;&lt;/a&gt;假设&lt;/h2&gt;&lt;p&gt;假设给定一个特征空间上的训练数据集：&lt;/p&gt;
&lt;p&gt;$$T=\left { \left ( x_{1},y_{1} \right ),\le
      
    
    </summary>
    
      <category term="机器学习" scheme="http://gavinhome.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://gavinhome.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Logistic回归</title>
    <link href="http://gavinhome.github.io/2017/08/26/LogisticRegression/"/>
    <id>http://gavinhome.github.io/2017/08/26/LogisticRegression/</id>
    <published>2017-08-26T02:57:06.000Z</published>
    <updated>2019-04-01T13:04:32.581Z</updated>
    
    <content type="html"><![CDATA[<p>Logistic回归回归又称Logistic回归回归分析，是一种广义的线性回归分析模型，常用于数据挖掘，疾病自动诊断，经济预测等领域。</p><ol><li>分类问题的首选算法。</li><li>Logistic回归解决二分类问题，Softmax回归解决多分类问题。</li></ol><h2 id="Sigmoid函数"><a href="#Sigmoid函数" class="headerlink" title="Sigmoid函数"></a>Sigmoid函数</h2><p>$$g\left(z\right) = \frac{1}{1+e^{-z}}=h_\theta \left(x\right) =g\left ( \theta ^Tx \right )=\frac{1}{1+e^{-\theta ^T x}}$$</p><p>$${g}’\left ( x \right ) = {\left ( \frac{1}{1+e^{-x}} \right )}’=\frac{e^{-x}}{\left ( 1+e^{-x} \right )^2}=\frac{1}{1+e^{-x}}\cdot \left ( 1- \frac{1}{1+e^{-x}} \right )=g\left ( x \right )\cdot \left ( 1-g\left ( x \right ) \right )$$</p><h3 id="Logistic回归参数估计"><a href="#Logistic回归参数估计" class="headerlink" title="Logistic回归参数估计"></a>Logistic回归参数估计</h3><p>假定：<br>      $$P\left ( y=1|x;\theta  \right ) = h_\theta \left ( x \right )$$,<br>      $$P\left ( y=0|x;\theta \right ) = 1-h_\theta \left (x \right)$$</p><p>则：<br>$$P\left(y|x;\theta\right)=\left(h_\theta\left(x\right )\right)^y\left(1-h_\theta\left(x\right)\right)^{1-y}$$</p><p>似然函数：<br>$$L\left ( \theta  \right ) = p\left ( \vec{y}|X;\theta  \right ) =  \prod_{i = 1}^{m}p\left ( y^\left ( i \right ) \right | {x^\left ( i \right )};\theta  ) = \prod_{i=1}^{m}{\left ( h_\theta \left ( x^{\left ( i \right )} \right ) \right )^{y^\left ( i \right ) }} {\left ( 1-h_\theta\left ( x^\left ( i \right ) \right )  \right )^{1-y^\left ( i \right )}}$$</p><p>取对数得到：$$l\left ( \theta  \right ) = logL\left ( \theta \right ) = \sum_{i=1}^{m}y^{\left ( i \right )}logh\left ( x^\left ( i \right ) \right ) + \left ( 1-y^\left ( i \right ) \right ) log\left ( 1-h\left ( x^\left ( i \right ) \right ) \right )$$</p><p>最后，对$$\theta$$参数求偏导：</p><p>$$\frac{\partial l\left ( \theta \right )}{\partial \theta_j} = \sum_{i=1}^{m}\left ( y^{\left ( i \right ) } -g\left ( \theta^Tx^{\left ( i \right )} \right )\right )\cdot x_j^{\left ( i \right )}$$</p><h3 id="参数迭代"><a href="#参数迭代" class="headerlink" title="参数迭代"></a>参数迭代</h3><p>Logistic回归参数的学习规则：</p><p>$$\theta_j: = \theta_j + \alpha \left ( y^{\left ( i \right )}  - h_\theta\left ( x^{\left ( i \right )} \right )\right )x_j^{\left ( i \right )}$$</p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>$$\therefore loss\left ( y_i,\hat{y}_i \right ) = -l\left ( \theta \right )$$，其中$$y_i\in \left { 0,1 \right }$$,$$\hat{y} = \left{\begin{matrix}<br>p_i &amp; y_i=1 \<br>1-p_i &amp; y_i = 0<br>\end{matrix}\right.$$</p><p>带入推导可得最终损失函数：$$\therefore loss\left ( y_i,\hat{y}<em>i \right ) = -l\left ( \theta \right ) = - \sum</em>{i=1}^{m}ln\left [ p_i^{y_i}\left ( 1-p_i \right )^{1-y_i} \right ] =  \sum_{i=1}^{m}ln\left [ y_iln\left ( 1+e^{-f_i} \right )  + \left ( 1-y_i \right )ln\left ( 1+e^{f_i} \right )\right ]$$</p><h3 id="Logistic回归的损失"><a href="#Logistic回归的损失" class="headerlink" title="Logistic回归的损失"></a>Logistic回归的损失</h3><p>$$y_i\in \left { -1,1 \right }$$</p><p>$$L\left ( \theta \right ) = \prod_{i=1}^{m}P_i^{\frac{\left ( y_i + 1 \right)}{2}}\left ( 1-P_i\right )^{\frac{-\left ( y_i-1 \right )}{2}}$$</p><p>$$loss\left ( y_i,\hat{y_i} \right )=\sum_{i=1}^{m}\left [ ln\left ( 1+e^{-y_i\cdot f_i} \right ) \right ]$$</p><h2 id="广义线性模型Generalized-Linear-Model"><a href="#广义线性模型Generalized-Linear-Model" class="headerlink" title="广义线性模型Generalized Linear Model"></a>广义线性模型Generalized Linear Model</h2><ol><li>y不再只是正太分布，而是扩大为指数族中的任一分布；</li><li>x -&gt; g(x) -&gt; y,连接函数g单调可导，例如逻辑回归中的$$g\left ( z \right ) = \frac{1}{1+e^{-z}}$$，拉伸变换$$g\left(z\right )=\frac{1}{1+e^{-\lambda z}}$$</li></ol><p><img src="https://raw.githubusercontent.com/GavinHome/MLL/master/images/GLM.png" alt="GLM" title="GLM"></p><h2 id="Softmax回归"><a href="#Softmax回归" class="headerlink" title="Softmax回归"></a>Softmax回归</h2><ol><li>K分类，第k类的参数为$$\vec{\theta_k}$$，组成二维矩阵$$\theta _{k\times n}$$</li><li>概率：$$p\left ( c=kx;\theta\right)=\frac{exp\left ( \theta_k^T x \right )}{\sum_{l=1}^{K}exp\left ( \theta_l^T x \right )}$$, 其中k=1,2,……,K</li><li>似然函数：$$ L\left ( \theta \right ) =\prod_{l=1}^{m}\prod_{k=1}^{K} p\left (c=k|x^{\left ( i \right )} ;\theta \right )^{y_k^\left ( i \right )}<br>=\prod_{l=1}^{K}\prod_{k=1}^{K}\left( exp\left ( \theta_k^T x^{\left ( l \right )} \right )  / \sum_{l=1}^{K}exp\left ( \theta^T_l x^\left ( l \right ) \right )\right )^{y_k^{\left ( i \right )}} $$</li><li>对数似然：<br>$$J_m\left ( \theta \right ) = ln L\left ( \theta \right ) = \sum_{i=1}^{m}\sum_{k=1}^{K}y_k^{\left ( i \right )}\cdot \left ( \theta^T_kx^{\left ( i \right )} - ln \sum_{l=1}^{K}exp\left ( \theta^T_l x^{\left ( i \right )} \right )\right )$$，<br>$$J\left ( \theta \right ) = \sum_{k=1}^{K}y_k\cdot  \left ( \theta^T_k x - ln\sum_{l=1}^{K}exp\left ( \theta_l^Tx \right )\right )$$</li><li>随机梯度：<br>$$\frac{\partial J\left ( \theta \right )}{\partial \theta_k} = \left ( y_k - p\left ( y_k|x,\theta \right ) \right )\cdot x$$</li></ol><h2 id="鸢尾花分类"><a href="#鸢尾花分类" class="headerlink" title="鸢尾花分类"></a>鸢尾花分类</h2><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><p>鸢尾花数据集是最有名的模式识别测试数据，1936年模式识别先驱Fisher在其论文“The use of multiple measurements in taxonomic problems” 使用了它。数据集包括3个鸢尾花类别，每个类别有50个样本，其中一个类别与另外两类线性可分，而另外两类不能线性可分。</p><h3 id="数据描述"><a href="#数据描述" class="headerlink" title="数据描述"></a>数据描述</h3><p>该数据集包括150行，每行为1个样本，每个样本共有5个字段，分别是花萼长度，花萼宽度，花瓣长度，花瓣宽度，类别。其中类别包括Iris Setosa, Iris Versicolour,Iris Virginica三类，前四个字段的单位为cm。</p><h3 id="实验代码"><a href="#实验代码" class="headerlink" title="实验代码"></a>实验代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl <span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment"># 绘图专用</span></span><br><span class="line"><span class="keyword">from</span> sklearn.cross_validation <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br><span class="line">mpl.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'FangSong'</span>]</span><br><span class="line">mpl.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iris_type</span><span class="params">(s)</span>:</span></span><br><span class="line">    it = &#123;<span class="string">'Iris-setosa'</span>:<span class="number">0</span>,<span class="string">'Iris-versicolor'</span>:<span class="number">1</span>,<span class="string">'Iris-virginica'</span>:<span class="number">2</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> it[s]</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"</span></span><br><span class="line">data = pd.read_table(io.StringIO(requests.get(url).content.decode(<span class="string">'utf-8'</span>)), sep=<span class="string">" "</span>, delimiter=<span class="string">','</span>, dtype=float, converters=&#123;<span class="number">4</span>:iris_type&#125;, header=<span class="literal">None</span>,names=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>]).values</span><br><span class="line"><span class="comment"># print data</span></span><br><span class="line"><span class="comment"># print type(data)</span></span><br><span class="line"></span><br><span class="line">x,y = np.split(data,(<span class="number">4</span>,),axis=<span class="number">1</span>)</span><br><span class="line">x=x[:,:<span class="number">2</span>]</span><br><span class="line"><span class="comment">#print x</span></span><br><span class="line"></span><br><span class="line">logreg = LogisticRegression()</span><br><span class="line">logreg.fit(x,y.ravel())</span><br><span class="line"></span><br><span class="line">N, M = <span class="number">500</span>, <span class="number">500</span></span><br><span class="line">x1_min, x1_max = x[:,<span class="number">0</span>].min(),x[:,<span class="number">0</span>].max()</span><br><span class="line">x2_min, x2_max = x[:,<span class="number">1</span>].min(),x[:,<span class="number">1</span>].max()</span><br><span class="line">t1 = np.linspace(x1_min,x1_max,N)</span><br><span class="line">t2 = np.linspace(x2_min,x2_max,M)</span><br><span class="line"></span><br><span class="line">x1,x2 = np.meshgrid(t1, t2)</span><br><span class="line">x_test = np.stack((x1.flat,x2.flat), axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">y_hat = logreg.predict(x_test)</span><br><span class="line">y_hat = y_hat.reshape(x1.shape)</span><br><span class="line">plt.pcolormesh(x1,x2,y_hat,cmap=plt.cm.prism)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>], c=y, edgecolors=<span class="string">'k'</span>,cmap=plt.cm.prism)</span><br><span class="line">plt.xlabel(<span class="string">'Sepal Length'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Sepal Width'</span>)</span><br><span class="line">plt.xlim(x1_min, x1_max)</span><br><span class="line">plt.ylim(x2_min, x2_max)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-26/output_34_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">y_hat = logreg.predict(x)</span><br><span class="line">y = y.reshape(<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> y_hat.shape</span><br><span class="line"><span class="keyword">print</span> y.shape</span><br><span class="line">result = y_hat == y</span><br><span class="line"><span class="keyword">print</span> y_hat</span><br><span class="line"><span class="keyword">print</span> y</span><br><span class="line"><span class="keyword">print</span> result</span><br><span class="line">c=np.count_nonzero(result)</span><br><span class="line"><span class="keyword">print</span> c</span><br><span class="line"><span class="string">'Accuracy: %.2f%%'</span> % (<span class="number">100</span>*float(c)/float(len(result)))</span><br></pre></td></tr></table></figure><pre><code>&apos;Accuracy: 76.67%&apos;</code></pre><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><ol><li>仅用花萼长度和宽度，在150个样本中，有115个分类正确，正确率为76.67%</li><li>使用四个特征，试验后发现有144个样本分类正确，正确率为96%.</li></ol><h2 id="案例跟踪"><a href="#案例跟踪" class="headerlink" title="案例跟踪"></a>案例跟踪</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl <span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment"># 绘图专用</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection  <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br><span class="line">mpl.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'FangSong'</span>]</span><br><span class="line">mpl.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iris_type</span><span class="params">(s)</span>:</span></span><br><span class="line">    it = &#123;<span class="string">'Iris-setosa'</span>:<span class="number">0</span>,<span class="string">'Iris-versicolor'</span>:<span class="number">1</span>,<span class="string">'Iris-virginica'</span>:<span class="number">2</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> it[s]</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"</span></span><br><span class="line">data = pd.read_table(io.StringIO(requests.get(url).content.decode(<span class="string">'utf-8'</span>)), sep=<span class="string">" "</span>, delimiter=<span class="string">','</span>, dtype=float, converters=&#123;<span class="number">4</span>:iris_type&#125;, header=<span class="literal">None</span>,names=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>]).values</span><br><span class="line"><span class="comment"># print data</span></span><br><span class="line"><span class="comment"># print type(data)</span></span><br><span class="line"></span><br><span class="line">x,y = np.split(data,(<span class="number">4</span>,),axis=<span class="number">1</span>)</span><br><span class="line">X=x[:,:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">x1_min, x1_max = x[:,<span class="number">0</span>].min(),x[:,<span class="number">0</span>].max()</span><br><span class="line">x2_min, x2_max = x[:,<span class="number">1</span>].min(),x[:,<span class="number">1</span>].max()</span><br><span class="line"></span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>], c=y, edgecolors=<span class="string">'k'</span>,cmap=plt.cm.prism)</span><br><span class="line">plt.xlabel(<span class="string">'Sepal Length'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Sepal Width'</span>)</span><br><span class="line">plt.xlim(x1_min, x1_max)</span><br><span class="line">plt.ylim(x2_min, x2_max)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=<span class="number">1</span>)</span><br><span class="line">linreg = LogisticRegression()</span><br><span class="line">model = linreg.fit(X_train,y_train)</span><br><span class="line">y_pred = linreg.predict(X_test)</span><br><span class="line"><span class="comment"># print linreg.coef_</span></span><br><span class="line"></span><br><span class="line">result = y_pred == y_test.ravel()</span><br><span class="line"></span><br><span class="line">c=np.count_nonzero(result)</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-26/output_39_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Accuracy: %.2f%%'</span> % (<span class="number">100</span>*float(c)/float(len(result)))</span><br></pre></td></tr></table></figure><pre><code>&apos;Accuracy: 84.21%&apos;</code></pre><p>分析：</p><ol><li>第四节使用训练集测试，结果正确性有误</li><li>本实验分训练集和测试集，准确率为84.21%</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Logistic回归回归又称Logistic回归回归分析，是一种广义的线性回归分析模型，常用于数据挖掘，疾病自动诊断，经济预测等领域。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分类问题的首选算法。&lt;/li&gt;
&lt;li&gt;Logistic回归解决二分类问题，Softmax回归解决多分类问题。&lt;
      
    
    </summary>
    
      <category term="机器学习" scheme="http://gavinhome.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://gavinhome.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>线性回归</title>
    <link href="http://gavinhome.github.io/2017/08/25/LinearRegression/"/>
    <id>http://gavinhome.github.io/2017/08/25/LinearRegression/</id>
    <published>2017-08-25T07:57:06.000Z</published>
    <updated>2019-04-01T13:04:32.581Z</updated>
    
    <content type="html"><![CDATA[<p>有监督学习中，标记值为离散类型，则为分类问题；如果是连续值，则为回归。样本非线性，参数线性。</p><h2 id="模型描述"><a href="#模型描述" class="headerlink" title="模型描述"></a>模型描述</h2><h3 id="模型介绍"><a href="#模型介绍" class="headerlink" title="模型介绍"></a>模型介绍</h3><p>$$y=ax+b$$</p><p>对于两个变量：</p><p>$$h_\theta \left ( x \right ) =\theta _0 + \theta _1 x_1+\theta _2 x_2$$</p><p>扩展到N维变量</p><p>$$h_\theta \left ( x \right ) =\sum _{i=0}^{n}{\theta _i}x_i=\theta ^T x$$</p><p>加上误差项可表示为以下形式：</p><p>$${y^\left ( i \right ) }= {\theta ^ T x^\left ( i \right )} + {\varepsilon ^ \left ( i \right )}$$</p><p>其中$${\varepsilon ^ \left ( i \right )}$$是独立同分布服务均值为0，误差为某定值$$\sigma ^2$$的高斯分布。</p><h3 id="求解解析式"><a href="#求解解析式" class="headerlink" title="求解解析式"></a>求解解析式</h3><p>目标函数:$$J\left ( \theta  \right )=\frac{1}{2}\sum^m_{i=1}\left ( h_\theta{\left ( x^{\left ( i \right )} \right )} - y^{\left ( i \right )} \right )^2 = \frac{1}{2}\left ( X\theta - y \right )^T\left ( X\theta - y \right )$$</p><p>梯度：$$\Delta _\theta J\left ( \theta \right ) = X^T X \theta - X^T y$$</p><p>求驻点，得：$$\theta = \left ( {X^T X} \right )^{-1} X^T y$$</p><p>若$${X^T X}$$不可逆或防止过拟合，增加扰动，得：$$\theta = \left ( {X^T X + \lambda I} \right )^{-1} X^T y$$</p><h3 id="线性回归的复杂度惩罚因子"><a href="#线性回归的复杂度惩罚因子" class="headerlink" title="线性回归的复杂度惩罚因子"></a>线性回归的复杂度惩罚因子</h3><p>L2-norm: $$J\left ( \vec{\theta}  \right )=\frac{1}{2}\sum^m_{i=1}\left ( h_\theta{\left ( x^{\left ( i \right )} \right )} - y^{\left ( i \right )} \right )^2  + \lambda \sum_{j=1}^{n}\theta_j^2$$, Ridge回归（1970）</p><p>L1-norm:<br>$$J\left ( \vec{\theta}  \right )=\frac{1}{2}\sum^m_{i=1}\left ( h_\theta{\left ( x^{\left ( i \right )} \right )} - y^{\left ( i \right )} \right )^2  + \lambda \sum_{j=1}^{n}  \left | \theta_j \right |$$, LASSO（Least Absolute Shrinkage and Selection Operator), LARS算法解决LASSO计算</p><p>Elastic Net:<br>$$J\left ( \vec{\theta}  \right )=\frac{1}{2}\sum^m_{i=1}\left ( h_\theta{\left ( x^{\left ( i \right )} \right )} - y^{\left ( i \right )} \right )^2  +\lambda  \left [  \rho\cdot  \sum_{j=1}^{n}  \left | \theta_j \right |  + \left ( 1-\rho  \right ) \cdot \sum_{j=1}^{n}\theta_j^2 \right ]$$</p><p>满足：$$\left{\begin{matrix}<br>\lambda &gt;0\<br>\rho \in \left [ 0,1 \right ]\<br>\end{matrix}\right.$$</p><h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>SGD:随机梯度，每拿到一个样本就进行梯度下降，一直循环</p><p>BGD:批量梯度</p><p>mini-batch:若干个样本的平均梯度作为更新方向</p><h2 id="案例：广告费与销量关系分析"><a href="#案例：广告费与销量关系分析" class="headerlink" title="案例：广告费与销量关系分析"></a>案例：广告费与销量关系分析</h2><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><p>数据集信息：数据共4列200行，前三列为输入特征，最后一列为输出特征。  </p><p>输入特征：</p><ol><li>TV：在电视上投资的广告费用（以千元为单数，下同）</li><li>Radio：在广播媒体上投资的广告费用</li><li>Newspaper： 在报纸媒体上投资的广告费用</li></ol><p>输出特征：</p><p>  Sales：该商品的销量</p><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"https://raw.githubusercontent.com/GavinHome/MLL/master/data/Advertising.csv"</span></span><br><span class="line">data=pd.read_csv(io.StringIO(requests.get(url).content.decode(<span class="string">'utf-8'</span>)))  </span><br><span class="line">data.head()</span><br></pre></td></tr></table></figure><div><br><table class="dataframe"><br>  <thead><br>    <tr style="text-align: right;"><br>      <th></th><br>      <th>Unnamed: 0</th><br>      <th>TV</th><br>      <th>Radio</th><br>      <th>Newspaper</th><br>      <th>Sales</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <th>0</th><br>      <td>1</td><br>      <td>230.1</td><br>      <td>37.8</td><br>      <td>69.2</td><br>      <td>22.1</td><br>    </tr><br>    <tr><br>      <th>1</th><br>      <td>2</td><br>      <td>44.5</td><br>      <td>39.3</td><br>      <td>45.1</td><br>      <td>10.4</td><br>    </tr><br>    <tr><br>      <th>2</th><br>      <td>3</td><br>      <td>17.2</td><br>      <td>45.9</td><br>      <td>69.3</td><br>      <td>9.3</td><br>    </tr><br>    <tr><br>      <th>3</th><br>      <td>4</td><br>      <td>151.5</td><br>      <td>41.3</td><br>      <td>58.5</td><br>      <td>18.5</td><br>    </tr><br>    <tr><br>      <th>4</th><br>      <td>5</td><br>      <td>180.8</td><br>      <td>10.8</td><br>      <td>58.4</td><br>      <td>12.9</td><br>    </tr><br>  </tbody><br></table><br></div><h3 id="绘制TV-Radio-Newspaper与Sales关系图"><a href="#绘制TV-Radio-Newspaper与Sales关系图" class="headerlink" title="绘制TV/Radio/Newspaper与Sales关系图"></a>绘制TV/Radio/Newspaper与Sales关系图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl <span class="comment">#设置环境变量</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#绘图专用</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br><span class="line">mpl.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'FangSong'</span>]</span><br><span class="line">mpl.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">x = data[[<span class="string">'TV'</span>, <span class="string">'Radio'</span>, <span class="string">'Newspaper'</span>]]</span><br><span class="line">y = data[[<span class="string">'Sales'</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制输入特征与输出特征的关系图</span></span><br><span class="line"><span class="comment"># plt.plot(data['TV'], y, 'ro', label='TV')</span></span><br><span class="line"><span class="comment"># plt.plot(data['Radio'], y, 'g^', label='Radio')</span></span><br><span class="line"><span class="comment"># plt.plot(data['Newspaper'], y, 'b*', label='Newspaper')</span></span><br><span class="line"><span class="comment"># plt.legend(loc='lower right')</span></span><br><span class="line"><span class="comment"># plt.grid()</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制：上图将三者关系绘制在一张图上，不能直观显示</span></span><br><span class="line"><span class="comment"># 以下代码将三组关系分别显示在三个子图上</span></span><br><span class="line">plt.figure(<span class="string">"TV/Radio/Newspaper与Sales的关系"</span>,figsize=(<span class="number">9</span>,<span class="number">12</span>))</span><br><span class="line">plt.subplot(<span class="number">311</span>)</span><br><span class="line">plt.plot(data[<span class="string">'TV'</span>], y, <span class="string">'ro'</span>, label=<span class="string">'TV'</span>)</span><br><span class="line">plt.title(<span class="string">'TV'</span>)</span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">312</span>)</span><br><span class="line">plt.plot(data[<span class="string">'Radio'</span>], y, <span class="string">'g^'</span>, label=<span class="string">'Radio'</span>)</span><br><span class="line">plt.title(<span class="string">'Radio'</span>)</span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">313</span>)</span><br><span class="line">plt.plot(data[<span class="string">'Newspaper'</span>], y, <span class="string">'b*'</span>, label=<span class="string">'Newspaper'</span>)</span><br><span class="line">plt.title(<span class="string">'Newspaper'</span>)</span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>/home/nbuser/anaconda2_410/lib/python2.7/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.  warnings.warn(&apos;Matplotlib is building the font cache using fc-list. This may take a moment.&apos;)</code></pre><p><img src="/img/static/2017-08-25/output_32_1.png" alt="png"></p><h3 id="构建特征向量和标签列"><a href="#构建特征向量和标签列" class="headerlink" title="构建特征向量和标签列"></a>构建特征向量和标签列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建包括特征向量名称的列表</span></span><br><span class="line">feature_cols=[<span class="string">'TV'</span>, <span class="string">'Radio'</span>, <span class="string">'Newspaper'</span>]</span><br><span class="line"><span class="comment">#使用特征向量标签集合选择原始数据的一个子集</span></span><br><span class="line"><span class="comment">#等价于data[['TV', 'Radio', 'Newspaper']]</span></span><br><span class="line">X = data[feature_cols] </span><br><span class="line"><span class="comment">#打印前5行</span></span><br><span class="line">X.head()</span><br></pre></td></tr></table></figure><div><br><table class="dataframe"><br>  <thead><br>    <tr style="text-align: right;"><br>      <th></th><br>      <th>TV</th><br>      <th>Radio</th><br>      <th>Newspaper</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <th>0</th><br>      <td>230.1</td><br>      <td>37.8</td><br>      <td>69.2</td><br>    </tr><br>    <tr><br>      <th>1</th><br>      <td>44.5</td><br>      <td>39.3</td><br>      <td>45.1</td><br>    </tr><br>    <tr><br>      <th>2</th><br>      <td>17.2</td><br>      <td>45.9</td><br>      <td>69.3</td><br>    </tr><br>    <tr><br>      <th>3</th><br>      <td>151.5</td><br>      <td>41.3</td><br>      <td>58.5</td><br>    </tr><br>    <tr><br>      <th>4</th><br>      <td>180.8</td><br>      <td>10.8</td><br>      <td>58.4</td><br>    </tr><br>  </tbody><br></table><br></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(X)</span><br></pre></td></tr></table></figure><pre><code>pandas.core.frame.DataFrame</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.shape</span><br></pre></td></tr></table></figure><pre><code>(200, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=data[<span class="string">'Sales'</span>]</span><br><span class="line">y.head()</span><br></pre></td></tr></table></figure><pre><code>0    22.11    10.42     9.33    18.54    12.9Name: Sales, dtype: float64</code></pre><h3 id="构建训练集与测试集"><a href="#构建训练集与测试集" class="headerlink" title="构建训练集与测试集"></a>构建训练集与测试集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cross_validation <span class="keyword">import</span> train_test_split</span><br><span class="line">X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_train.shape</span><br></pre></td></tr></table></figure><pre><code>(150, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_test.shape</span><br></pre></td></tr></table></figure><pre><code>(50, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y_train.shape</span><br></pre></td></tr></table></figure><pre><code>(150,)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y_test.shape</span><br></pre></td></tr></table></figure><pre><code>(50,)</code></pre><h3 id="sklearn的线性回归"><a href="#sklearn的线性回归" class="headerlink" title="sklearn的线性回归"></a>sklearn的线性回归</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">linreg = LinearRegression()</span><br><span class="line">model = linreg.fit(X_train,y_train)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model</span><br></pre></td></tr></table></figure><pre><code>LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linreg.intercept_</span><br></pre></td></tr></table></figure><pre><code>2.87696662231793</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linreg.coef_</span><br></pre></td></tr></table></figure><pre><code>array([ 0.04656457,  0.17915812,  0.00345046])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip(feature_cols,linreg.coef_)</span><br></pre></td></tr></table></figure><pre><code>[(&apos;TV&apos;, 0.046564567874150281), (&apos;Radio&apos;, 0.17915812245088839), (&apos;Newspaper&apos;, 0.0034504647111804412)]</code></pre><h3 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y_pred = linreg.predict(X_test)</span><br><span class="line">y_pred</span><br></pre></td></tr></table></figure><pre><code>array([ 21.70910292,  16.41055243,   7.60955058,  17.80769552,        18.6146359 ,  23.83573998,  16.32488681,  13.43225536,         9.17173403,  17.333853  ,  14.44479482,   9.83511973,        17.18797614,  16.73086831,  15.05529391,  15.61434433,        12.42541574,  17.17716376,  11.08827566,  18.00537501,         9.28438889,  12.98458458,   8.79950614,  10.42382499,        11.3846456 ,  14.98082512,   9.78853268,  19.39643187,        18.18099936,  17.12807566,  21.54670213,  14.69809481,        16.24641438,  12.32114579,  19.92422501,  15.32498602,        13.88726522,  10.03162255,  20.93105915,   7.44936831,         3.64695761,   7.22020178,   5.9962782 ,  18.43381853,         8.39408045,  14.08371047,  15.02195699,  20.35836418,        20.57036347,  19.60636679])</code></pre><h3 id="回归问题的评价测度"><a href="#回归问题的评价测度" class="headerlink" title="回归问题的评价测度"></a>回归问题的评价测度</h3><p>对于分类问题，评价测度（evaluation metrics）是准确率，但这种方法不适用于回归问题。我们使用针对连续数值的评价测度，有三种常用的针对线性回归的测度。</p><ol><li>平均绝对误差（Mean Absolute Error, MAE)</li><li>均方差误差（Mean Squared Error, MSE)</li><li>均方根误差（Root Mean Squared Error, RMSE)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">sum_mean = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(y_pred)):</span><br><span class="line">    sum_mean += (y_pred[i]-y_test.values[i])**<span class="number">2</span></span><br><span class="line"><span class="string">"RMSE by hand:"</span>,np.sqrt(sum_mean/len(y_pred))</span><br></pre></td></tr></table></figure><pre><code>(&apos;RMSE by hand:&apos;, 1.4046514230328957)</code></pre><h3 id="作图"><a href="#作图" class="headerlink" title="作图"></a>作图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line">plt.plot(range(len(y_pred)), y_pred, <span class="string">'g'</span>, label=<span class="string">'predict'</span>)</span><br><span class="line">plt.plot(range(len(y_pred)), y_test, <span class="string">'r'</span>, label=<span class="string">'test'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper right'</span>)</span><br><span class="line">plt.xlabel(<span class="string">"the number of sales"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"value of sales"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-25/output_56_0.png" alt="png"></p><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><p>根据结果得模型：y=2.8769+0.0465xTV+0.1791xRadio+0.00345xNewspaper),发现Newspaper系数很小，再进一步观察Newspaper与Sales的关系散点图，发现其线性关系并不明显，因此将其去除。再看看线性回归预测的RMSE结果如何。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">X = data[[<span class="string">'TV'</span>, <span class="string">'Radio'</span>]]</span><br><span class="line">X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=<span class="number">1</span>)</span><br><span class="line">linreg = LinearRegression()</span><br><span class="line">model = linreg.fit(X_train,y_train)</span><br><span class="line">y_pred = linreg.predict(X_test)</span><br><span class="line"></span><br><span class="line">sum_mean = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(y_pred)):</span><br><span class="line">    sum_mean += (y_pred[i]-y_test.values[i])**<span class="number">2</span></span><br><span class="line"><span class="string">"RMSE by hand:"</span>,np.sqrt(sum_mean/len(y_pred))</span><br></pre></td></tr></table></figure><pre><code>(&apos;RMSE by hand:&apos;, 1.3879034699382888)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line">plt.plot(range(len(y_pred)), y_pred, <span class="string">'b'</span>, label=<span class="string">'predict'</span>)</span><br><span class="line">plt.plot(range(len(y_pred)), y_test, <span class="string">'r'</span>, label=<span class="string">'test'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper right'</span>)</span><br><span class="line">plt.xlabel(<span class="string">"the number of sales"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"value of sales"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/img/static/2017-08-25/output_60_0.png" alt="png"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>本模型虽然简单，但它涵盖了机器学习的相当部分内容。如使用75%的训练集和25%的测试机，这往往是机器学习模型的第一步。分析结果的权值和特征数据分布，我们使用了简单的方法：直接删除；单这样做，仍然得到了更好的预测结果。<br>在机器学习中有“奥卡姆剃刀”原理，即：如果能够用简单模型解决问题，则不适用更为复杂的模型。因为复杂模型往往增加了不确定性，造成过多的人力和屋里成本，且容易过拟合。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有监督学习中，标记值为离散类型，则为分类问题；如果是连续值，则为回归。样本非线性，参数线性。&lt;/p&gt;
&lt;h2 id=&quot;模型描述&quot;&gt;&lt;a href=&quot;#模型描述&quot; class=&quot;headerlink&quot; title=&quot;模型描述&quot;&gt;&lt;/a&gt;模型描述&lt;/h2&gt;&lt;h3 id=&quot;模型介
      
    
    </summary>
    
      <category term="机器学习" scheme="http://gavinhome.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://gavinhome.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>获取Rtx用户状态方法</title>
    <link href="http://gavinhome.github.io/2017/02/23/%E8%8E%B7%E5%8F%96Rtx%E7%94%A8%E6%88%B7%E7%8A%B6%E6%80%81%E6%96%B9%E6%B3%95/"/>
    <id>http://gavinhome.github.io/2017/02/23/获取Rtx用户状态方法/</id>
    <published>2017-02-23T13:50:00.000Z</published>
    <updated>2019-04-01T13:04:32.590Z</updated>
    
    <content type="html"><![CDATA[<p>背景:企业OA系统需要与Rtx集成，且高权限身份用户需要获取符合某一条下的所有员工rtx状态…</p><a id="more"></a><p><div id="toc"></div><br><!-- csdn --></p><p>方案:以此背景，基于rtx sdk做二次开发，</p><ol><li><p>后台调用RootObj.QueryUserState(String name);方法，api说明</p><pre><code>语法：int QueryUserState(String UserName)功能：查看用户状态参数：UserName用户帐号调用：QueryUserState(“herolin”)说明：返回0 离线、1在线、2离开、-984用户不存在，其他表示调用失败</code></pre></li></ol><p>实际开发测试时候，发现如果大批量的用户不存在，即获取异常，程序执行比较慢，所以我们直接采用第二种方案。</p><ol start="2"><li><p>对于大批量获取，可以在后台通过调用getstatus.php来返回所有用户的状态信息以下是官方api说明：</p><pre><code>getstatus.php 获取用户在线状态仅支持GET@param string username RTX用户名@return int 0不在线 1在线@example http://localhost:8012/getstatus.php?username=XXXX</code></pre></li></ol><p>状态返回值有两个，实际使用过程中，发现还有一个返回值是2，即离开状态；rtx用户名是企业分配的员工账号，将批量员工账号（用分割符号分隔开）传入到php，并改写php代码，获取账号列表，循环得到每个账号的状态等（0，1，2，-1表示不存在）四类。</p><p>同时将网站ip，添加到rtx server安装目录下的sdkproperty.xml文件中（关于sdk的ip限制），并将访问url中的localhost换成rtx server服务器内网ip。为了不破坏服务器文件，将改写的php文件，重新命名放置于webroot目录下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;背景:企业OA系统需要与Rtx集成，且高权限身份用户需要获取符合某一条下的所有员工rtx状态…&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://gavinhome.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="RTX" scheme="http://gavinhome.github.io/tags/RTX/"/>
    
  </entry>
  
</feed>
